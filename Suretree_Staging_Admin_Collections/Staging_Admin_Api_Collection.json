{
	"info": {
		"_postman_id": "0d19f212-7e56-44a9-82c0-a390bf3c2626",
		"name": "Staging AdminConsole APIs QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "AUTH",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"\r",
											"pm.test(\"Set signin token value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"admin_Auth_token\", jsonData.Details.AuthToken);    \r",
											"});\r",
											"pm.test(\"Set signin refresh token value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"Refresh_token\", jsonData.Details.RefreshToken);    \r",
											"}); \r",
											"pm.test(\"Set customerID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"CustomerId\", jsonData.Details.AccountDetails.CustomerId);    \r",
											"});\r",
											"\r",
											"tests[\"Http status is 200]\"] = responseCode.code === 200;\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"    tests[\"Response description is: \" + jsonData.SuccessMessage] = jsonData.SuccessMessage === \"Login successful.\";\r",
											"    tests[\"Response description is: \" + jsonData.ResponseCode] = jsonData.ResponseCode === 200;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "11353498-74ca-4984-b65b-bca06b8aaff9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"tester.account@suretree.com\",\r\n    \"Password\": \"demo123\",\r\n    \"UniqueIDFromFrontEnd\": \"c732386c2e6a8a8b13c-2fa83c954421dd6fb94-7ee90de95a0c4a92f49-48427e2a6aca38b1d5-043d4c1cf40a67107\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Auth- email not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"\r",
											"pm.test(\"Set signin token value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"admin_Auth_token\", jsonData.Details.AuthToken);    \r",
											"});\r",
											"pm.test(\"Set signin refresh token value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"Refresh_token\", jsonData.Details.RefreshToken);    \r",
											"}); \r",
											"pm.test(\"Set customerID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.environment.set(\"CustomerId\", jsonData.Details.AccountDetails.CustomerId);    \r",
											"});\r",
											"\r",
											"tests[\"Http status is 200]\"] = responseCode.code === 200;\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"    tests[\"Response description is: \" + jsonData.SuccessMessage] = jsonData.SuccessMessage === \"Login successful.\";\r",
											"    tests[\"Response description is: \" + jsonData.ResponseCode] = jsonData.ResponseCode === 200;\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "52ff5658-ee0c-4861-a93c-9ad8cb1c5095",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"tester.account@suretree.com\",\r\n    \"Password\": \"demo123\",\r\n    \"UniqueIDFromFrontEnd\": \"c732386c2e6a8a8b13c-2fa83c954421dd6fb94-7ee90de95a0c4a92f49-48427e2a6aca38b1d5-043d4c1cf40a67107\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Auth - non-existing email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.test(\"Verify that Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400, 'Bad Request');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that error message returns 'Oops, invalid user account.\", function () {\r",
											"    pm.expect(resp.ErrorMessage).to.eql(\"Oops, invalid user account.\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "af8a09d0-a1c3-4e53-a049-902cfe3422c9",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "1a28beb5-e086-4e8d-ba40-164b5dfc2a3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"tester@yopmail.com\",\r\n    \"Password\": \"demo123\",\r\n    \"UniqueIDFromFrontEnd\": \"c732386c2e6a8a8b13c-2fa83c954421dd6fb94-7ee90de95a0c4a92f49-48427e2a6aca38b1d5-043d4c1cf40a67107\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Invalid Email: Admin console auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ErrorMessage\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5f37e789-d0cf-4f51-905f-65d285090307",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"\",\r\n    \"Password\": \"demo123\",\r\n    \"UniqueIDFromFrontEnd\": \"c732386c2e6a8a8b13c-2fa83c954421dd6fb94-7ee90de95a0c4a92f49-48427e2a6aca38b1d5-043d4c1cf40a67107\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Admin console auth Invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ErrorMessage\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ba5672a9-634f-4dd6-9887-7196839f79ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"tester.account@suretree.com\",\r\n    \"Password\": \"\",\r\n    \"UniqueIDFromFrontEnd\": \"c732386c2e6a8a8b13c-2fa83c954421dd6fb94-7ee90de95a0c4a92f49-48427e2a6aca38b1d5-043d4c1cf40a67107\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Auth Invalid password and email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"ErrorMessage\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f7851321-de50-428a-b5e8-7d776e2674b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"\",\r\n    \"Password\": \"\",\r\n    \"UniqueIDFromFrontEnd\": \"c732386c2e6a8a8b13c-2fa83c954421dd6fb94-7ee90de95a0c4a92f49-48427e2a6aca38b1d5-043d4c1cf40a67107\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "No unique ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.test(\"Verify that Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Response code is 400\", function () {\r",
											"    pm.expect(resp.ResponseCode).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that error message returns UniqueID is required\", function () {\r",
											"    pm.expect(resp.ErrorMessage).to.eql(\"UniqueID is required.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dff971ce-2673-4981-a48f-2ac001c66f6a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Email\": \"tester.account@suretree.com\",\r\n    \"Password\": \"demo123\",\r\n    \"UniqueIDFromFrontEnd\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						}
					],
					"id": "ac6d569f-6512-4968-8b69-60bcbb454ffc"
				},
				{
					"name": "Refresh",
					"item": [
						{
							"name": "Refresh successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"pm.test(\"Verify that Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Verify that SuccessMessage returns 'new token has been generated successfully\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.SuccessMessage).to.eql(\"New token has been generated successfully.\");\r",
											"});\r",
											"pm.test(\"Verify that error message returns null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.ErrorMessage).to.eql(null);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4a33889e-84cf-423e-a586-a5bc02d8aeb3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AuthToken\": \"{{Auth_token}}\",\r\n    \"RefreshToken\": \"{{Refresh_token}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Refresh no authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.test(\"Verify that Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that status code is 401\", function () {\r",
											"     pm.expect(resp.statusCode).to.eql(401);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "342aa473-2231-498e-b4cd-6a99e7c8d2d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AuthToken\": \"\",\r\n    \"RefreshToken\": \"{{Refresh_token}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						},
						{
							"name": "Refresh token invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "02b24df5-292b-432a-8ba6-ffbb7d2e8005",
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.test(\"Verify that Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that status code is 401\", function () {\r",
											"     pm.expect(resp.statusCode).to.eql(401);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "35488bcc-2bb8-403d-ba94-9ed610ec47a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AuthToken\": \"{{Auth_token}}\",\r\n    \"RefreshToken\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/Auth"
							},
							"response": []
						}
					],
					"id": "1743bef1-9e1d-46e5-a6f1-f4ba58d69ae8"
				}
			],
			"id": "0a448e6f-ab97-43c5-ac1d-1b90d3b349e4"
		},
		{
			"name": "Sponsored Product (Staging)",
			"item": [
				{
					"name": "Create Sponsor Product Campaign",
					"item": [
						{
							"name": "Loans",
							"item": [
								{
									"name": "Loans- Create Sponsor Product Campaign",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data.sponsoredProductId)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "23995c74-af91-4126-b7c1-26b32b8dd42f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"56aa2bfe-a512-49c7-8b00-af885d299444\",\r\n   \"CategoryID\": \"746cb516-69e8-4c30-9912-694674241d4f\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Empty expireindays - Loans- Create Sponsor Product Campaign",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a8e5e623-ea5c-4a62-84f8-7523f2d12232",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": \"\",\r\n   \"ProductId\" : \"95fc30bc-994d-46aa-a519-73351815bdca\",\r\n   \"CategoryID\": \"44981E1D-CF61-40D4-8FC4-DC55EC6BEF70\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Empty product id - Loans- Create Sponsor Product Campaign",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Product should have Id\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Please Provide a Product Id.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5e70393a-1227-478c-adcc-0ebef0a24caa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"\",\r\n   \"CategoryID\": \"44981E1D-CF61-40D4-8FC4-DC55EC6BEF70\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Invalid produt id - Loans- Create Sponsor Product Campaign",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1a1d4147-e617-4a57-ad06-648c79078faa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"5b76tghk52e1dc-ealk676e6-47nbhgfr99-a4hjdgdtdec-2693c9dhstsgs9d232\",\r\n   \"CategoryID\": \"2170b581-b8bb-4f56-a9a1-8a392b55d8bf\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Empty category id - Loans- Create Sponsor Product Campaign",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Your test message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Please Provide a Category Id.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "aa6d19fe-fe1b-44bb-a520-5a6b1a4541f0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"95fc30bc-994d-46aa-a519-73351815bdca\",\r\n   \"CategoryID\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Loans- Create Sponsor Product Campaign invalid category id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b18c71db-db2a-4f32-a0c8-7485a609f511",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"95fc30bc-994d-46aa-a519-73351815bdca\",\r\n   \"CategoryID\": \"2170hjshs878b581-b8bhgsfsf87363b-4fssy6556-a@&*jdhdh9a1-hdhdhddgg\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Loans- Create Sponsor Product Campaign All fields empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"LoanSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"LoanCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"LoanProductId\", Request.ProductId)\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "acff43ed-c424-484e-8c35-37186da6a823",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": \"\",\r\n   \"ProductId\" : \"\",\r\n   \"CategoryID\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								}
							],
							"id": "9a1d3344-b52d-4784-a2ee-3aa65f383f98"
						},
						{
							"name": "savings",
							"item": [
								{
									"name": "Savings - Create Sponsor Product Campaign Empty ExpireinDays",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ce99276f-7eb9-4a5e-9a2c-1bf667c45169",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": \"\",\r\n   \"ProductId\" : \"46fd9ca6-f179-4d56-9e45-b50b257a65c2\",\r\n   \"CategoryID\": \"e068aadf-2116-41c3-9655-567a0e2bdd46\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Savings - Create Sponsor Product Campaign Empty Productid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Product should have an iD\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Please Provide a Product Id.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a3e071e0-a79f-407b-be71-f0cca638e21d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"\",\r\n   \"CategoryID\": \"e068aadf-2116-41c3-9655-567a0e2bdd46\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Savings - Create Sponsor Product Campaign invalid productId",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "df274e4e-04ef-4fd9-b314-cc88c488aed4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"fa3d4ghsgsg5636-b07fhy74-44gddjfk%38-##nddhdh-591a91jhhh*30391c\",\r\n   \"CategoryID\": \"e068aadf-2116-41c3-9655-567a0e2bdd46\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Savings - Create Sponsor Product Campaign Empty categoryid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Your test message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Please Provide a Category Id.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6ae61e17-9857-4ed8-9c6b-04901a391cfd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"46fd9ca6-f179-4d56-9e45-b50b257a65c2\",\r\n   \"CategoryID\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Savings - Create Sponsor Product Campaign invalid category id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f2b499dd-679b-4147-8e7a-5e416c9f12b5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{admin_Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"46fd9ca6-f179-4d56-9e45-b50b257a65c2\",\r\n   \"CategoryID\": \"4d6eghgsgsg702c-76567hbdhd4-4ehaggs549a-b852625gvb9-2b44cabgstssvf6476\"\r\n\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Savings - Create Sponsor Product Campaign All fields Empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.ProductId)\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1507e888-833d-49ed-9316-9a9028de8183",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": \"\",\r\n   \"ProductId\" : \"\",\r\n   \"CategoryID\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								},
								{
									"name": "Savings - Create Sponsor Product Campaign",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "adb6b74f-5001-4a91-88d8-469852413c00",
												"exec": [
													"JsonData = pm.response.json()\r",
													"Request = JSON.parse(pm.request.body.raw)\r",
													"pm.collectionVariables.set(\"SavingsSponsoredProductId\", JsonData.data.sponsoredProductId)\r",
													"pm.collectionVariables.set(\"SavingsCategoryId\", Request.CategoryID)\r",
													"pm.collectionVariables.set(\"SavingsProductId\", Request.productId)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Your test message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"Sponsor Product Campaign created successfully.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ffeb995a-00bc-4a74-9de3-b3ed808bc117",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{Auth_token}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"ExpireInDays\": 30,\r\n   \"ProductId\" : \"46fd9ca6-f179-4d56-9e45-b50b257a65c2\",\r\n   \"CategoryID\": \"e068aadf-2116-41c3-9655-567a0e2bdd46\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/v2/product/create-sponsor-product-campaign"
									},
									"response": []
								}
							],
							"id": "3d6fd447-5882-4cb0-8337-1a33ddbf7fa1"
						}
					],
					"id": "b2550357-c999-4f54-ad2e-ea7c8b04db93"
				},
				{
					"name": "Update Sponsored Product Campaign",
					"item": [
						{
							"name": "Loan- Update Sponsor Product Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dfdaa00-a724-4ecd-ac69-4d30184eeba7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Sponsor Product Campaign updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9fdfef44-66d9-48da-ad78-d871a63d55af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{LoanSponsoredProductId}}\", \r\n    \"ExpireInDays\": {{$randomInt}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Loan- Update Sponsor Product Campaign empty SponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dfdaa00-a724-4ecd-ac69-4d30184eeba7",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Please Provide a Sponsored Product Id.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5620c794-19c7-4bdc-8731-b972ee9233a7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"ExpireInDays\": 35\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Loan- Update Sponsor Product Campaign invalid SponsoredProductId Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dfdaa00-a724-4ecd-ac69-4d30184eeba7",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Sponsored Product Not Found.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4c338204-d7e2-4519-a563-31eac6114096",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"b86d9hsg542725f-946sysdv22-4cfhydtsbs5-ad0hsbssm80-f5a0bhstsrs21e8688\",\r\n    \"ExpireInDays\": 35\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Loan- Update Sponsor Product Campaign Empty ExpireInDays",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dfdaa00-a724-4ecd-ac69-4d30184eeba7",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7df73154-fe8b-497e-9eab-1a263a503a5e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{LoanSponsoredProductId}}\",\r\n    \"ExpireInDays\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Loan- Update Sponsor Product Campaign All Fields Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9dfdaa00-a724-4ecd-ac69-4d30184eeba7",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ed618288-1ab9-4b3f-b8e7-df1c33a1aa21",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"ExpireInDays\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Savings-Update Sponsor Product Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c63e0f65-6b89-4b0f-816e-5b40d42b60b6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function (){\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Sponsor Product Campaign updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "635b3502-d744-4bd5-9405-4c2641ca0608",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{SavingsSponsoredProductId}}\",\r\n    \"ExpireInDays\": 35\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Savings-Update Sponsor Product Campaign Empty SponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c63e0f65-6b89-4b0f-816e-5b40d42b60b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function (){\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Please Provide a Sponsored Product Id.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e8b9f2a5-1c9d-4749-9c15-8c86d561a14f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"ExpireInDays\": 40\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Savings-Update Sponsor Product Campaign invalid SponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c63e0f65-6b89-4b0f-816e-5b40d42b60b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function (){\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Sponsored Product Not Found.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1af9cadc-4539-4b9c-837a-af58dd622bf8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"b86d9hsg542725f-946sysdv22-4cfhydtsbs5-ad0hsbssm80-f5a0bhstsrs21e8688\",\r\n    \"ExpireInDays\": 35\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Savings-Update Sponsor Product Campaign Empty ExpireInDays",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c63e0f65-6b89-4b0f-816e-5b40d42b60b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function (){\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0e79b97a-83cc-4b07-a2d4-f3764b68a02a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{SponsoredProductId}}\",\r\n    \"ExpireInDays\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						},
						{
							"name": "Savings-Update Sponsor Product Campaign All Fields Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c63e0f65-6b89-4b0f-816e-5b40d42b60b6",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e269a62b-69a4-4e3e-b20b-a84cb6133aea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"ExpireInDays\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/update-sponsor-product-campaign"
							},
							"response": []
						}
					],
					"id": "2be6b953-b8af-4ddd-9012-fccbb7f6dd20"
				},
				{
					"name": "Set Sponsored Product Campaign Status",
					"item": [
						{
							"name": "Set Loan Sponsored Product Campaign Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97a2c3f4-9949-4dfc-a3f9-0d479a0cc43e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Sponsor Product Campaign status updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "22fb255f-c3f3-44cf-88c2-e9493ce79639",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{LoanSponsoredProductId}}\",\r\n    \"SponsoredProductEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set Loan Sponsored Product Campaign Empty sponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97a2c3f4-9949-4dfc-a3f9-0d479a0cc43e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Please Provide a Sponsored Product Id.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6c0d7c15-28db-4650-91ff-1a477b1a011f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"SponsoredProductEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set Loan Sponsored Product Campaign invalid sponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97a2c3f4-9949-4dfc-a3f9-0d479a0cc43e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8baaa45d-c02d-4b6b-ac87-a13093d825f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"b86d9hsg542725f-946sysdv22-4cfhydtsbs5-ad0hsbssm80-f5a0bhstsrs21e8688\",\r\n    \"SponsoredProductEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set Loan Sponsored Product Campaign empty SponsoredProductEnabled",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97a2c3f4-9949-4dfc-a3f9-0d479a0cc43e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4761ab67-1686-4141-b835-18acdfb34d26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{LoanSponsoredProductId}}\",\r\n    \"SponsoredProductEnabled\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set  Savings Sponsored Product Campaign Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "75f070d4-109d-4f7a-a205-a6f0a620d33d",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Your test success\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.isSuccess).to.eql(true);\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"Sponsor Product Campaign status updated successfully.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a43e4aa3-0741-420e-a12d-83922d1568e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{SavingsSponsoredProductId}}\",\r\n    \"SponsoredProductEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set  Savings Sponsored Product Campaign Empty SponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a464af1d-1ee2-48e9-bdad-bb5f42c803a5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"is your test Successfull \", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
											"});\r",
											"pm.test(\"Your test message\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Please Provide a Sponsored Product Id.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8f7215e5-ad23-4797-9032-7d92c98738cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"SponsoredProductEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set  Savings Sponsored Product Campaign Invalid SponsoredProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d660d2d-aaea-45de-bbf2-033fedd882ab",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"    });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "37bfc224-04bf-4b31-b84a-44618f2ff648",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "4035c258-d875-4acb-9f11-080b2af01939",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"b86d9hsg542725f-946sysdv22-4cfhydtsbs5-ad0hsbssm80-f5a0bhstsrs21e8688\",\r\n    \"SponsoredProductEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set  Savings Sponsored Product Campaign Empty SponsoredProductEnabled",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30518dc1-3b33-4f58-b6b5-880b2530d29b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a48a91df-d653-4fd5-82be-d0c1eafe71e3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"{{LoanSponsoredProductId}}\",\r\n    \"SponsoredProductEnabled\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						},
						{
							"name": "Set  Savings Sponsored Product Campaign All Fields Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0202b4c-fe65-426b-8551-d30ad3325cd3",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2978f247-22ce-4ebb-9143-8e8d7f3fb90b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SponsoredProductId\" : \"\",\r\n    \"SponsoredProductEnabled\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/product/set-sponsor-product-campaign-status"
							},
							"response": []
						}
					],
					"id": "3fa24126-eda1-4a08-8497-92a8e67cfba4"
				},
				{
					"name": "Get Single Record",
					"item": [
						{
							"name": "Get a Single Record Loan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a7d2c8e-f0bd-4824-bf30-aea7d5edab86",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e2f25195-8d86-4333-8da2-ad2660f96fad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/product/get-sponsor-product-campaign/{{LoanProductId}}/{{LoanCategoryId}}"
							},
							"response": []
						},
						{
							"name": "Get a Single Record Loan No LoanProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a7d2c8e-f0bd-4824-bf30-aea7d5edab86",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e6a10c24-2a27-4ec0-9063-9b21ed81c343",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/product/get-sponsor-product-campaign/{{LoanCategoryId}}"
							},
							"response": []
						},
						{
							"name": "Get a Single Record Loan NO LoanCategoryId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a7d2c8e-f0bd-4824-bf30-aea7d5edab86",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a140d0d4-0915-4518-817e-570ce4b466e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/product/get-sponsor-product-campaign/{{LoanProductId}}"
							},
							"response": []
						},
						{
							"name": "Get a Single Record Savings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a70f21b-d170-47b0-ada4-e0fc2fe1b837",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9d4318e3-e2e7-429a-9d6b-c2bd5afdc251",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/product/get-sponsor-product-campaign/{{SavingsProductId}}/{{SavingsCategoryId}}"
							},
							"response": []
						},
						{
							"name": "Get a Single Record Savings No SavingsProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a70f21b-d170-47b0-ada4-e0fc2fe1b837",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "047c48b8-111e-4b62-954c-786df556862e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/product/get-sponsor-product-campaign/{{SavingsCategoryId}}"
							},
							"response": []
						},
						{
							"name": "Get a Single Record Savings No SavingsCategoryId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a70f21b-d170-47b0-ada4-e0fc2fe1b837",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0725e6b8-d2f9-466e-9861-9e3c0dcaf676",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/product/get-sponsor-product-campaign/{{SavingsProductId}}"
							},
							"response": []
						}
					],
					"id": "55faa103-2dcd-41bb-9c67-2157c2c43027"
				},
				{
					"name": "Get-loan-product",
					"item": [
						{
							"name": "get-loan-product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faa6ae3b-50d7-4d3f-96d2-9adaa937b2ae",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ec2a8ecc-fc4c-4b64-b129-1d0a52bfe64f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/products/get-loan-product/{{LoanProductId}}"
							},
							"response": []
						},
						{
							"name": "get-loan-product- No LoanProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faa6ae3b-50d7-4d3f-96d2-9adaa937b2ae",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1efb6071-9d76-4f0a-a649-0e76b44e363a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/products/get-loan-product/"
							},
							"response": []
						}
					],
					"id": "a794a0a4-898e-4382-b73a-a579226c5e59"
				},
				{
					"name": "Get SavingProductData",
					"item": [
						{
							"name": "Get SavingProductData",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9952c46-4268-4716-b9e4-de2ddd5129bf",
										"exec": [
											"var resp = JSON.parse(responseBody)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Data retrive successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"ResponseCode is 200\", function () {\r",
											"    pm.expect(resp.responseCode).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4922cc28-8aee-44c3-8b91-b3700f245d23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/products/GetSavingProductData/{{SavingsProductId}}"
							},
							"response": []
						},
						{
							"name": "Get SavingProductData -No ProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9952c46-4268-4716-b9e4-de2ddd5129bf",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Status code name should be 'Not Found'\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d79613c7-9f54-4548-955b-ec75f9d58c2b",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "1833d492-7fc5-4c48-9c4a-2a575324db16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/products/GetSavingProductData/"
							},
							"response": []
						}
					],
					"id": "c24f7c12-5d79-41b2-8bed-aa126f1cdfae"
				},
				{
					"name": "Get All Category Campaigns per Product",
					"item": [
						{
							"name": "Get Loan - All Category Campaigns per Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45fc73b7-abaa-426b-a3f6-c2021329f6cb",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2bf8bf30-0ead-4797-9f18-190638d1ebf4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/Product/get-sponsor-product-campaigns/{{LoanProductId}}"
							},
							"response": []
						},
						{
							"name": "Get Loan - All Category Campaigns per Product Copy No LoanProductId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45fc73b7-abaa-426b-a3f6-c2021329f6cb",
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "39bb4165-cb6d-4c9d-9d62-0d5b5a15b2ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/Product/get-sponsor-product-campaigns"
							},
							"response": []
						},
						{
							"name": "Get Savings- All Category Campaigns per Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64e9fcac-b5ea-4b32-9691-58493f3485c7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "64ba384f-6356-4049-9632-933b78b8f2a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/Product/get-sponsor-product-campaigns/{{LoanProductId}}"
							},
							"response": []
						},
						{
							"name": "Get Savings- All Category Campaigns No LoanProductid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64e9fcac-b5ea-4b32-9691-58493f3485c7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8eebcce0-b1f3-4a6b-b29f-75b902783021",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/v2/Product/get-sponsor-product-campaigns/{{LoanProductId}}"
							},
							"response": []
						}
					],
					"id": "4d9c625d-5354-461d-93ba-ae9d847f0197"
				}
			],
			"id": "ffb9b152-f27a-4c7a-8c95-dd4ca21a1a96"
		},
		{
			"name": "Loan Application",
			"item": [
				{
					"name": "Invalid Token - Get Loans Application List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faaa4d0b-84b1-4877-abd9-571f8c307b29",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"var Response = pm.response.text();\r",
									"pm.test(\"Responsebody is empty\", function () {\r",
									"    pm.expect(Response).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "26c94b20-f79d-4d48-aed8-61c7e3455c2a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjU4Nzk3ZWI2LTM1MjUtNGZlOC1iNDc1LTUyMWI0OWIzODE0OCIsIkN1c3RvbWVySWQiO98y4OGI2MDIxZC1mNDI0LTRlYjQtOGUxOC1iYjRmNTIzNDEyMzMiLCJVc2VyRnVsbE5hbWUiOiJCb2x1d2F0aWZlIE9sYXR1bmRlIiwiRW1haWwiOiJ0ZXN0ZXIuYWNjb3VudEBzdXJldHJlZS5jb20iLCJqdGkiOiJmZGY2YWIyMy1jMWY4LTQwNzctYjFiMS0yMThiNGRhZGRjMWYiLCJQaG9uZU51bWJlciI6IisyMzQ4MDU1NTE1NTQ1IiwibmJmIjoxNzAyMDMzMDI0LCJleHAiOjE3MDIwMzQyMjQsImlhdCI6MTcwMjAzMzAyNH0.r_JFVCVhfnsqykuF9CIuVUcEydT9AvaxOkrK0T7yltQ"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"SearchText\": \"\",\r\n    \"PageNumber\": 1,\r\n    \"RowsPerPage\": 20,\r\n    \"ApplicationTypes\": \"individual loans\",\r\n    \"ApplicationSortOrders\": \"desc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/Customers/get-loanapplication-list"
					},
					"response": []
				},
				{
					"name": "No Token- Get Loans Application List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faaa4d0b-84b1-4877-abd9-571f8c307b29",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"var Response = pm.response.text();\r",
									"pm.test(\"Responsebody is empty\", function () {\r",
									"    pm.expect(Response).to.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7749fbad-4d85-401e-83d2-be6951979134",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"SearchText\": \"\",\r\n    \"PageNumber\": 1,\r\n    \"RowsPerPage\": 20,\r\n    \"ApplicationTypes\": \"individual loans\",\r\n    \"ApplicationSortOrders\": \"desc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/Customers/get-loanapplication-list"
					},
					"response": []
				}
			],
			"id": "56a4b21d-0d9b-4ebd-a4c9-7c0d957b2f9b"
		},
		{
			"name": "Loan Application lists",
			"item": [
				{
					"name": "single endpoint for application listing pages of Savings, Loan and FD Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c7c6a91-59e9-4620-8d30-14fe9ede5539",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Your test message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
									"});\r",
									"pm.test(\"Your test isSuccess\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.isSuccess).to.eql(true);\r",
									"});\r",
									"pm.test(\"Your test successMessage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.successMessage).to.eql(\"Records retrieved successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test errorMessage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.errorMessage).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test responseCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.responseCode).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "163ccf73-d618-4e1e-9c2a-ad7c7a9e77ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productType\": [\"Fixed Deposit\"],\r\n  \"applicationID\": [],\r\n  \"providerName\": [],\r\n  \"productname\": [],\r\n  \"firstName\": [],\r\n  \"lastName\": [],\r\n  \"status\": [\"Pending\",\"Cancelled\",\"Savings Pending\"],\r\n  \"duration\": [\"3\",\"6\",\"7\"],\r\n  \"DataSource\":[\"Loan Applications\",\"Customer Savings\",\"Common Applications\"],\r\n  \"rowsPerPageParam\": 10,\r\n  \"customerId\": \"d038faad-4084-42cc-83f8-f09d39f7141d\",\r\n  \"pageNumberParam\": 1,\r\n  \"dateOfApplication\": \"2023-07-27\",\r\n  \"startDate\": \"2022-01-12\",\r\n  \"endDate\": \"2023-10-12\",\r\n  \"minAmount\":0,\r\n  \"maxAmount\": 100000000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/Application/list-allcustomer-applications"
					},
					"response": []
				},
				{
					"name": "single endpoint for application listing pages of Savings, Loan and FD Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c7c6a91-59e9-4620-8d30-14fe9ede5539",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Your test message\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Success\");\r",
									"});\r",
									"pm.test(\"Your test isSuccess\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.isSuccess).to.eql(true);\r",
									"});\r",
									"pm.test(\"Your test successMessage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.successMessage).to.eql(\"Records retrieved successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Your test errorMessage\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.errorMessage).to.eql(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test responseCode\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.responseCode).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5c9d4642-d08c-42af-878a-64131c037468",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productType\": [],\n  \"applicationID\": [],\n  \"providerName\": [],\n  \"productname\": [],\n  \"firstName\": [],\n  \"lastName\": [],\n  \"status\": [\"Pending\",\"Cancelled\",\"Savings Pending\"],\n  \"duration\": [\"3\",\"6\",\"7\"],\n  \"DataSource\":[\"Loan Applications\",\"Customer Savings\",\"Common Applications\"],\n  \"rowsPerPageParam\": 10,\n  \"customerId\": \"\",\n  \"pageNumberParam\": 1,\n  \"dateOfApplication\": \"\",\n  \"startDate\": \"\",\n  \"endDate\": \"\",\n  \"minAmount\":0,\n  \"maxAmount\": 100000000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/Application/list-allcustomer-applications"
					},
					"response": []
				},
				{
					"name": "Get-customer-application-details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b614a019-b234-4859-a408-75730ba50da0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches isSuccess\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(true);\r",
									"});\r",
									"pm.test(\"Body matches message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Success\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches data\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(true);\r",
									"});\r",
									"pm.test(\"Body matches errors\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(null);\r",
									"});\r",
									"pm.test(\"Body matches statusCode \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0ecad91f-93cd-49d5-8dca-fdf2675ef96f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/Application/get-customer-application-details?applicationId=1e61c601-4bed-4ecb-9afc-2acd7bef259d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"Application",
								"get-customer-application-details"
							],
							"query": [
								{
									"key": "applicationId",
									"value": "1e61c601-4bed-4ecb-9afc-2acd7bef259d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "download-customer-application-pdf",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05c0d722-d6e8-4e4b-9f0d-69e8356e9eb5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "86840cf0-35de-4718-a9c8-500ffa794d73",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/Application/download-customer-application-pdf?applicationId=1e61c601-4bed-4ecb-9afc-2acd7bef259d",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"Application",
								"download-customer-application-pdf"
							],
							"query": [
								{
									"key": "applicationId",
									"value": "1e61c601-4bed-4ecb-9afc-2acd7bef259d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update-common-application-status-by-admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4d899c7-5a18-444b-9344-0bfff5666a10",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches isSuccess\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(true);\r",
									"});\r",
									"pm.test(\"Body matches message\", function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    pm.expect(jsonData.message).to.include(\"Application status has been updated successfully.\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches data\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(true);\r",
									"});\r",
									"pm.test(\"Body matches errors\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(null);\r",
									"});\r",
									"pm.test(\"Body matches statusCode \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a23981cd-9b3b-4399-bc2e-42134d7e0392",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "0a6a3293-09cf-488c-aa34-368a49ff6269",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"CommonApplicationId\": \"1e61c601-4bed-4ecb-9afc-2acd7bef259d\",\r\n    \"SavingsStatus\": \"Provider Notified\",\r\n    \"Comment\": \"Provider notified on submit application\",\r\n    \"SavingsPaymentStatus\": null\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/savings/update-common-application-status-by-admin"
					},
					"response": []
				},
				{
					"name": "Loan Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f24e03f-39d8-4e93-bf2b-f13b4ca299bc",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5f9986bf-fcea-4983-b621-110005bea958",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerIds\": [\r\n        \"3f294963-5f24-4dba-9e18-23cbe79e2d3b\",\r\n        \"6663fe0a-214c-48e3-84d5-5a8b7912bbca\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/loans/get-applicant-data",
						"description": "Uses an array to pass the values of single or multiple CustomerApplicationID(s) in the Request Body\n\ne.g:\n\n\\[\n\n\"6663fe0a-214c-48e3-84d5-5a8b7912bbca\",\n\n\"6663fe0a-214c-48e3-84d5-5a8b7912bbca\"\n\n\\]"
					},
					"response": []
				},
				{
					"name": "Invalid CustomerApplication ID - Loan Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "636bce71-d88f-44ba-88ee-44b9e46df195",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "10e7b601-a678-4a92-914b-f6467e157475",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerIds\": [\r\n        \"3f294963-5f24-4dba-9e18-23cbe79e2\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/loans/get-applicant-data",
						"description": "Uses an array to pass the values of single or multiple CustomerApplicationID(s) in the Request Body\n\ne.g:\n\n\\[\n\n\"6663fe0a-214c-48e3-84d5-5a8b7912bbca\",\n\n\"6663fe0a-214c-48e3-84d5-5a8b7912bbca\"\n\n\\]"
					},
					"response": []
				},
				{
					"name": "Empty Body - Loan Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "46c8b898-6fb7-4d14-9be9-0dd2358f40d7",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "76a42753-f02e-4591-8da0-4e91b3e93916",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customerIds\": [ ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/loans/get-applicant-data"
					},
					"response": []
				},
				{
					"name": "Doesn't Exist Search - Get Loans Application List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faaa4d0b-84b1-4877-abd9-571f8c307b29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									" var Response = pm.response.json();\r",
									"pm.test(\"Application list is not Null\", function () {\r",
									"    pm.expect(Response.List).to.be.empty;\r",
									"});\r",
									"pm.test(\"CustomerApplicationId is a string\", function () {\r",
									"    pm.expect(Response.Details).to.eql(null);\r",
									"});\r",
									"pm.test(\"Value of Total, TotalPages, PageItemsCount equals 0\", function () {\r",
									"    pm.expect(Response.Total, Response.TotalPages, Response.PageItemsCount).to.eqls(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5ff3bd98-0e92-4f34-9f0a-561ff9fa21ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"SearchText\": \"phone number\",\r\n    \"PageNumber\": 1,\r\n    \"RowsPerPage\": 20,\r\n    \"ApplicationTypes\": \"individual loans\",\r\n    \"ApplicationSortOrders\": \"desc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/Customers/get-loanapplication-list"
					},
					"response": []
				},
				{
					"name": "Validate the number of rows returned - Get Loans Application List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faaa4d0b-84b1-4877-abd9-571f8c307b29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									" var Response = pm.response.json();\r",
									"var List = Response.List.length\r",
									"console.log(Response.List.length)\r",
									"\r",
									"pm.test(\"Application list is not Null\", function () {\r",
									"    pm.expect(Response.List).to.not.eql(null);\r",
									"});\r",
									"pm.test(\"CustomerApplicationId is a string\", function () {\r",
									"    pm.expect(Response.List[0].CustomerApplicationId).is.string;\r",
									"});\r",
									"pm.test(\"Validate the number of rows returned\", function () {\r",
									"    pm.expect(Response.RowsPerPage).to.eql(List);\r",
									"});\r",
									"pm.environment.set(\"CustomerApplicationId\", Response.List[0].CustomerApplicationId)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e9665a62-c675-4da2-9a3c-9d96000b8e30",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"SearchText\": \"\",\r\n    \"PageNumber\": 1,\r\n    \"RowsPerPage\": 10,\r\n    \"ApplicationTypes\": \"\",\r\n    \"ApplicationSortOrders\": \"desc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/Customers/get-loanapplication-list"
					},
					"response": []
				},
				{
					"name": "Empty Application Types - Get Loans Application List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faaa4d0b-84b1-4877-abd9-571f8c307b29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									" var Response = pm.response.json();\r",
									"var List = Response.List\r",
									"console.log(List.length)\r",
									"pm.test(\"Application list is not Null\", function () {\r",
									"    pm.expect(Response.List).to.not.eql(null);\r",
									"});\r",
									"pm.test(\"CustomerApplicationId is a string\", function () {\r",
									"    pm.expect(Response.List[0].CustomerApplicationId).is.string;\r",
									"});\r",
									"pm.environment.set(\"CustomerApplicationId\", Response.List[0].CustomerApplicationId)"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c537305b-3f4a-4a7f-9b13-d83cb316afa8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"SearchText\": \"\",\r\n    \"PageNumber\": 1,\r\n    \"RowsPerPage\": 20,\r\n    \"ApplicationTypes\": \"\",\r\n    \"ApplicationSortOrders\": \"desc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/Customers/get-loanapplication-list"
					},
					"response": []
				},
				{
					"name": "Get Loans Application List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faaa4d0b-84b1-4877-abd9-571f8c307b29",
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name has 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									" var Response = pm.response.json();\r",
									"pm.test(\"Application list is not Null\", function () {\r",
									"    pm.expect(Response.List).to.not.eql(null);\r",
									"});\r",
									"pm.test(\"CustomerApplicationId is a string\", function () {\r",
									"    pm.expect(Response.List[0].CustomerApplicationId).is.string;\r",
									"});\r",
									"pm.test('CustomerApplicationId', ()=>{\r",
									"pm.environment.set(\"CustomerApplicationId\", Response.List[0].CustomerApplicationId)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f8d56585-0dfc-424d-887a-b4fc58b00fbe",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "605bf77e-28a3-49b5-8d06-cacb1db9acbc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"SearchText\": \"\",\r\n    \"PageNumber\": 1,\r\n    \"RowsPerPage\": 20,\r\n    \"ApplicationTypes\": \"Personal loans\",\r\n    \"ApplicationSortOrders\": \"desc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/Customers/get-loanapplication-list"
					},
					"response": []
				}
			],
			"id": "6c23f022-cbec-4e3d-8b06-ada7ea617315"
		},
		{
			"name": "Account Detail config Page",
			"item": [
				{
					"name": "Account Details Configuration/update-provider-account-configuration-for-invoice",
					"item": [
						{
							"name": "Api for Account Details Configuration/update-provider-account-configuration-for-invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5827b0e-2cd7-4cf8-a442-10bb11d85981",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify the success message\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Account Details update for invoicing successful\");\r",
											"})\r",
											"pm.test(\"Verify data returns accountNumber\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"accountNumber\")\r",
											"})\r",
											"pm.test(\"Verify data returns organizationAccountDetailId\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"organizationAccountDetailId\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1790ada5-af91-463d-9ac2-4e03fe73e6d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"organizationAccountDetailId\": \"ab931e86-93b4-40ba-838f-07229832f208\",\r\n        \"accountNumber\": \"3810094479\",\r\n        \"isDisplayedOnInvoice\": true\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-provider-account-configuration-for-invoice"
							},
							"response": []
						},
						{
							"name": "No account and organisation ID: Api for Account Details Configuration/update-provider-account-configuration-for-invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9fde9e3c-3142-4a1c-a265-88994473ea06",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify error message 'Account details not found!'\", function () {\r",
											"pm.expect(jsonData.errors[0]).to.eql(\"Account details not found!\");\r",
											"});\r",
											"pm.test(\"Verify message and data are null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9915ca90-9ba0-458d-b69d-04516bd89b4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"accountNumber\": \"\",\r\n        \"isDisplayedOnInvoice\": true,\r\n        \"organizationAccountDetailId\": \"\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-provider-account-configuration-for-invoice"
							},
							"response": []
						},
						{
							"name": "Empty organisation details: Api for Account Details Configuration/update-provider-account-configuration-for-invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eba270d0-0724-4e4f-96b0-8e2f1a73a995",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify error message 'Account details not found!'\", function () {\r",
											"pm.expect(jsonData.errors[0]).to.eql(\"Account details not found!\");\r",
											"});\r",
											"pm.test(\"Verify message and data are null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d96a1f1c-33e1-4bda-8ef0-ff6b2f0175ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"accountNumber\": \"2071263559\",\r\n        \"isDisplayedOnInvoice\": true,\r\n        \"organizationAccountDetailId\": \"\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-provider-account-configuration-for-invoice"
							},
							"response": []
						},
						{
							"name": "Invalid organisation details: Api for Account Details Configuration/update-provider-account-configuration-for-invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eba270d0-0724-4e4f-96b0-8e2f1a73a995",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify error message 'Account details not found!'\", function () {\r",
											"pm.expect(jsonData.errors[0]).to.eql(\"Account details not found!\");\r",
											"});\r",
											"pm.test(\"Verify message and data are null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2eaff129-8159-456c-8712-33adf2e07de9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"accountNumber\": \"2071263559\",\r\n        \"isDisplayedOnInvoice\": true,\r\n        \"organizationAccountDetailId\": \"FYGU43567890-34\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-provider-account-configuration-for-invoice"
							},
							"response": []
						},
						{
							"name": "Invalid account number: Api for Account Details Configuration/update-provider-account-configuration-for-invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86887925-cc88-422c-ad41-6fa257f963b4",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify error message 'Account details not found!'\", function () {\r",
											"pm.expect(jsonData.errors[0]).to.eql(\"Account details not found!\");\r",
											"});\r",
											"pm.test(\"Verify message and data are null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a8eea4c9-410e-4a2b-a9d4-6b6eae4eced6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"accountNumber\": \"00000000\",\r\n        \"isDisplayedOnInvoice\": true,\r\n        \"organizationAccountDetailId\": \"df222246-d291-48d3-9229-36266d9e1944\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-provider-account-configuration-for-invoice"
							},
							"response": []
						},
						{
							"name": "Empty account number: Api for Account Details Configuration/update-provider-account-configuration-for-invoice",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86887925-cc88-422c-ad41-6fa257f963b4",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify error message 'Account details not found!'\", function () {\r",
											"pm.expect(jsonData.errors[0]).to.eql(\"Account details not found!\");\r",
											"});\r",
											"pm.test(\"Verify message and data are null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fe6565d1-d37c-4ffc-915e-87e5b94f93ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"accountNumber\": \"\",\r\n        \"isDisplayedOnInvoice\": true,\r\n        \"organizationAccountDetailId\": \"df222246-d291-48d3-9229-36266d9e1944\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-provider-account-configuration-for-invoice"
							},
							"response": []
						}
					],
					"id": "3e50fbce-35fb-4ca2-af7a-cbded0333c13"
				},
				{
					"name": "Account datails configuration status",
					"item": [
						{
							"name": "endpoint for Account Details Configuration Statuses (Enums)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfe63dfa-2dbb-4306-9e33-9a5af860b125",
										"exec": [
											"var statusArray = pm.response.json();\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify statusArray is present and not empty\", function () {\r",
											"    pm.expect(statusArray).to.be.an('array').that.is.not.empty;\r",
											"});\r",
											"pm.test(\"Verify the specific status values\", function () {\r",
											"    var expectedStatusValues = [\"Approved\", \"Rejected\", \"Deleted\", \"Submitted\", \"Updated\"];\r",
											"    pm.expect(statusArray).to.eql(expectedStatusValues);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6534a1ca-5419-48e3-8690-9be272721087",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/Enums/account-details-configuration-approval-status"
							},
							"response": []
						},
						{
							"name": "Invalid Authorization: endpoint for Account Details Configuration Statuses (Enums)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfe63dfa-2dbb-4306-9e33-9a5af860b125",
										"exec": [
											"pm.test(\"Verify that Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Verify that Test Code name is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7022f7e9-5377-46fa-9199-2bf7b37792bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "fvgbhjnytdyrtseasrdtfgc"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/Enums/account-details-configuration-approval-status"
							},
							"response": []
						},
						{
							"name": "No Authorization: endpoint for Account Details Configuration Statuses (Enums)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfe63dfa-2dbb-4306-9e33-9a5af860b125",
										"exec": [
											"pm.test(\"Verify that Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Verify that Test Code name is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "712e4878-1b38-4374-8a96-f9abfef71900",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/Enums/account-details-configuration-approval-status"
							},
							"response": []
						}
					],
					"id": "c5f4800e-d28a-4525-b692-79e9ad3cc888"
				},
				{
					"name": "Ability for Finance officer to Edit an already inputted account number",
					"item": [
						{
							"name": "Ability for Finance officer to Edit an already inputted account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "202cdc96-906e-4a33-8cf6-ec9b33be6f25",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that responseData contains 'isSuccess' property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('isSuccess');",
											"});",
											"",
											"pm.test(\"Verify that responseData contains 'message' property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('message');",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"",
											"",
											"pm.test(\"Verify that 'data' is true\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.data).to.be.true;",
											"});",
											"",
											"pm.test(\"Verify that responseData contains 'data' property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"});",
											"",
											"pm.test(\"Verify that responseData contains 'errors' property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('errors');",
											"});",
											"",
											"pm.test(\"Verify that responseData contains 'statusCode' property\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('statusCode');",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b950a12d-8969-42f0-b33b-dccb9567b9cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"organizationAccountDetailId\":\"ab931e86-93b4-40ba-838f-07229832f208\",\r\n     \"accountNumber\":\"3810094479\",\r\n     \"accountName\":\"damilola oyesina\",\r\n     \"bankId\":\"b0d7e4af-23d3-4362-b67b-1d5802ac131e\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-account-details-configuration"
							},
							"response": []
						},
						{
							"name": "Deleted account number: Ability for Finance officer to Edit an already inputted account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "202cdc96-906e-4a33-8cf6-ec9b33be6f25",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is false\", function () {",
											"    pm.expect(jsonData.data).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify errors message is not empty\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "da978f95-a004-4b63-baa4-b6f530c30a9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"organizationAccountDetailId\":\"d404c7e4-9d79-4d73-84d4-00e4716a036b\",\r\n     \"accountNumber\":\"9163409866\",\r\n     \"accountName\":\"damilola oyesina\",\r\n     \"bankId\":\"b0d7e4af-23d3-4362-b67b-1d5802ac131e\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-account-details-configuration"
							},
							"response": []
						},
						{
							"name": "Empty organizationAccountDetailId : Ability for Finance officer to Edit an already inputted account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "202cdc96-906e-4a33-8cf6-ec9b33be6f25",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is false\", function () {",
											"    pm.expect(jsonData.data).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify errors message is not empty ()!'\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ac8bcb7b-5a44-4d79-b508-774756581bfe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"organizationAccountDetailId\":\"\",\r\n     \"accountNumber\":\"3810094479\",\r\n     \"accountName\":\"damilola oyesina\",\r\n     \"bankId\":\"b0d7e4af-23d3-4362-b67b-1d5802ac131e\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-account-details-configuration"
							},
							"response": []
						},
						{
							"name": "Invalid organizationAccountDetailId : Ability for Finance officer to Edit an already inputted account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "202cdc96-906e-4a33-8cf6-ec9b33be6f25",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is false\", function () {",
											"    pm.expect(jsonData.data).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify errors message is not empty ()!'\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "49d708bd-4861-4da9-9e87-0628bc56f372",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"organizationAccountDetailId\":\"ab931e86-93b4-40ba-838f-07229832f208444\",\r\n     \"accountNumber\":\"3810094479\",\r\n     \"accountName\":\"damilola oyesina\",\r\n     \"bankId\":\"b0d7e4af-23d3-4362-b67b-1d5802ac131e\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-account-details-configuration"
							},
							"response": []
						},
						{
							"name": "Invalid bankId: Ability for Finance officer to Edit an already inputted account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "202cdc96-906e-4a33-8cf6-ec9b33be6f25",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is false\", function () {",
											"    pm.expect(jsonData.data).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify errors message is not empty ()!'\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7870d2e6-6110-4af8-940b-5eaff5edfd9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"organizationAccountDetailId\":\"ab931e86-93b4-40ba-838f-07229832f208\",\r\n     \"accountNumber\":\"3810094479\",\r\n     \"accountName\":\"damilola oyesina\",\r\n     \"bankId\":\"b0d7e4af-23d3-4362-b67b-1d5802ac131e44\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-account-details-configuration"
							},
							"response": []
						},
						{
							"name": "Empty bankId: Ability for Finance officer to Edit an already inputted account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "202cdc96-906e-4a33-8cf6-ec9b33be6f25",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is false\", function () {",
											"    pm.expect(jsonData.data).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify errors message is not empty ()!'\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "83bdbc96-71a9-4cde-9156-f57dd0fe00b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"organizationAccountDetailId\":\"ab931e86-93b4-40ba-838f-07229832f208\",\r\n     \"accountNumber\":\"3810094479\",\r\n     \"accountName\":\"damilola oyesina\",\r\n     \"bankId\":\"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/update-account-details-configuration"
							},
							"response": []
						}
					],
					"id": "7f61a05d-4b97-42d2-a441-2793f0a7b993"
				},
				{
					"name": "API to validate account number by external API (Paystack)",
					"item": [
						{
							"name": "API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "668be9dc-7bee-4bfc-99d9-2b8b39793246",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is true\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.true;\r",
											"});\r",
											"pm.test(\"Verify message is 'Account number resolved'\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"Account number resolved\");\r",
											"});\r",
											"pm.test(\"Verify errors array is null\", function () {\r",
											"    pm.expect(jsonData.errors).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify data is an object\", function () {\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"pm.test(\"Verify properties of the data object\", function () {\r",
											"    var dataObject = jsonData.data;\r",
											"\r",
											"    pm.expect(dataObject).to.have.property(\"accountNumber\").that.is.a(\"string\");\r",
											"    pm.expect(dataObject).to.have.property(\"accountName\").that.is.a(\"string\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "81d799eb-3866-4c8e-93c9-e114e4fcdfb2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=2190800022&bankCode=057",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "2190800022"
										},
										{
											"key": "bankCode",
											"value": "057"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid accountNo - API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c88deaef-f335-4741-b884-5a908f99430d",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify message is null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify data is null\", function () {\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify error message is returned\", function () {\r",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a3acba21-bb38-4110-9b58-de97e5abbc4b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=2222222222&bankCode=057",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "2222222222"
										},
										{
											"key": "bankCode",
											"value": "057"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Bank Code- API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "063388cf-a68b-4b08-aae2-315753a65f7d",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify message is null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify data is null\", function () {\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify error message is returned\", function () {\r",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0b9ee1b2-88d0-4991-9741-b0692b38916e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "pm.test(\"Status code is 400\", function () {\r\n    pm.response.to.have.status(400);\r\n});\r\npm.test(\"Body matches string\", function () {\r\n    pm.expect(pm.response.text()).to.include(\"error\");\r\n});"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=2190800022&bankCode=101",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "2190800022"
										},
										{
											"key": "bankCode",
											"value": "101"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty Bank Code- API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa0537e1-751b-49bb-bda4-cb76b8310458",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Verify isSuccess is false\", function () {\r",
											"    pm.expect(jsonData.isSuccess).to.be.false;\r",
											"});\r",
											"pm.test(\"Verify message is null\", function () {\r",
											"    pm.expect(jsonData.message).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify data is null\", function () {\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});\r",
											"pm.test(\"Verify error message is returned\", function () {\r",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "09833a71-edb5-473a-821c-634eaf3454e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=2190800022&bankCode=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "2190800022"
										},
										{
											"key": "bankCode",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty accountNo API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9699495d-8647-4b70-abc4-fb7b2ea7aafb",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify data is null\", function () {",
											"    pm.expect(jsonData.data).to.be.null;",
											"});",
											"pm.test(\"Verify error message is returned\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "52802313-54e7-4cd4-89f2-c1b49249c73b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=&bankCode=057",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": ""
										},
										{
											"key": "bankCode",
											"value": "057"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid authorization - API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "46552ec7-45ba-472a-8e96-3d726c41d239",
										"exec": [
											"pm.test(\"Verify that Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Verify that Test Code name is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ccecd5d9-2694-4e93-a0c3-af84eb036069",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "fdgvbhjkjhvgfdszfxgchvbjnkjkhghgfdd"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=2190800022&bankCode=057",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "2190800022"
										},
										{
											"key": "bankCode",
											"value": "057"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Mismatched accountNo & Bank Code - API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a07ced57-5795-4afd-8b31-3cc9a97f1e57",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});",
											"pm.test(\"Verify data is null\", function () {",
											"    pm.expect(jsonData.data).to.be.null;",
											"});",
											"pm.test(\"Verify error message is returned\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "42d8f2b8-99d4-41b3-8b79-822aa370cb93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=3107231019&bankCode=057",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "3107231019"
										},
										{
											"key": "bankCode",
											"value": "057"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Authorization - API to validate account number by external API (Paystack)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e6b37e52-59c7-44de-87df-10fc54b101f4",
										"exec": [
											"pm.test(\"Verify that Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"pm.test(\"Verify that Test Code name is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bd5e2a98-26f8-4bb6-99d9-8034cd7a6479",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-number-validation?accountNumber=9163401866&bankCode=304",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-number-validation"
									],
									"query": [
										{
											"key": "accountNumber",
											"value": "9163401866"
										},
										{
											"key": "bankCode",
											"value": "304"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "a6c08d9a-d771-4de3-982b-731819a66bb6",
					"description": "This is pending"
				},
				{
					"name": "Search account details by provider",
					"item": [
						{
							"name": "Search account details by provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4afaccba-4a2f-4789-b8f8-54745a428f46",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an array and not empty\", function () {",
											"    pm.expect(jsonData.data).to.be.an('array').that.is.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b84b5476-d919-40d1-8682-e658c362d72a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-details-configuration-search-by-provider?providerId=3974f4da-4e7e-4c66-9516-bf68f185d8d1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-details-configuration-search-by-provider"
									],
									"query": [
										{
											"key": "providerId",
											"value": "3974f4da-4e7e-4c66-9516-bf68f185d8d1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid providerId: Search account details by provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4afaccba-4a2f-4789-b8f8-54745a428f46",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is null\", function () {",
											"    pm.expect(jsonData.data).to.be.null;",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cf0e633c-bbdf-4069-8e9f-90bd6361ebb9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-details-configuration-search-by-provider?providerId=3974f4da-4e7e-4c66-9516-bf68f185d8d1gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-details-configuration-search-by-provider"
									],
									"query": [
										{
											"key": "providerId",
											"value": "3974f4da-4e7e-4c66-9516-bf68f185d8d1gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty providerId: Search account details by provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4afaccba-4a2f-4789-b8f8-54745a428f46",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify isSuccess is false\", function () {",
											"    pm.expect(jsonData.isSuccess).to.be.false;",
											"});",
											"pm.test(\"Verify data is null\", function () {",
											"    pm.expect(jsonData.data).to.be.null;",
											"});",
											"pm.test(\"Verify errors array contains 'No data was returned'\", function () {",
											"    pm.expect(jsonData.errors).to.be.an('array').that.is.not.empty;",
											"    pm.expect(jsonData.errors[0]).to.eql(\"No data was returned\");",
											"});",
											"pm.test(\"Verify message is null\", function () {",
											"    pm.expect(jsonData.message).to.be.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "07cef39f-a432-4510-a34e-3a9726657ffa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/account-details-configuration-search-by-provider?providerId=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"AccountDetailsConfiguration",
										"account-details-configuration-search-by-provider"
									],
									"query": [
										{
											"key": "providerId",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "1a13aa7e-7f51-4166-b3cb-96c2964bad53"
				},
				{
					"name": "implement  a Filter - ( search filter by at least 2 fields)",
					"item": [
						{
							"name": "implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c660b57d-f48a-43c3-bc45-ac72a1ff915b",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});",
											"pm.test(\"Verify account name is Suretree Systems Limited\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"    pm.expect(firstRecord.accountName).to.eql(\"Suretree Systems Limited\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6bead17a-f99b-475b-abdd-94b1f6f6d91c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token_Live}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"Suretree Systems Limited\",\n    \"providerID\":[\"3974f4da-4e7e-4c66-9516-bf68f185d8d1\"],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":true, //true/false/nullable\n    \"dateCreated\":null,//nullable\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by organizationAccountDetailId: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dec5614c-207a-424d-bd97-c877aa25a9de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"\",\n    \"organizationAccountDetailId\":[\"3E67B635-38ED-4A5F-AE00-0A3633264692\"],\n    \"providerID\":[],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by providerID: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "78123e9d-108c-4534-8ccf-4ba36702c6a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"\",\n    \"organizationAccountDetailId\":[],\n    \"providerID\":[\"3974f4da-4e7e-4c66-9516-bf68f185d8d1\"],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by providerName: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});",
											"pm.test(\"Verify providerName is Realty Invest Network Solution\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"    pm.expect(firstRecord.providerName).to.eql(\"Realty Invest Network Solution\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0959c070-a979-4492-ba6c-0ae4e1482a47",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "373442dc-9833-4657-ab0a-7e362dbd6887",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"\",\n    \"organizationAccountDetailId\":[],\n    \"providerID\":[],//nullable,\n    \"providerName\":[\"Branch\"],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by accountName: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});",
											"pm.test(\"Verify account name is Suretree Systems Limited\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"    pm.expect(firstRecord.accountName).to.eql(\"Suretree Systems Limited\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "104d1286-724a-4238-a63e-ef469073bdfa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"\",\n    \"organizationAccountDetailId\":[],\n    \"providerID\":[],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[\"Suretree Systems Limited\"],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by accountNumber: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});",
											"pm.test(\"Verify accountNumber is returned\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"    pm.expect(firstRecord.accountNumber).to.eql(\"2367896890\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0a873aa1-7ccb-4a15-93de-c9a39c1425cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"\",\n    \"organizationAccountDetailId\":[],\n    \"providerID\":[],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[\"2367896890\"],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by bankName: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});",
											"pm.test(\"Verify bankName is Access bank\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"    pm.expect(firstRecord.bankName).to.eql(\"Access bank\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "47b9fbe6-2858-4734-b1e2-10efb726e480",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"\",\n    \"organizationAccountDetailId\":[],\n    \"providerID\":[],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[\"Access bank\"],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						},
						{
							"name": "filter by queryString: implement  a Filter - ( search filter by at least 2 fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37a37e96-190b-4347-b9f1-0c6f680ac2ae",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.equal(200);",
											"});",
											"pm.test(\"Verify that \\\"isSuccess\\\" is true\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData.isSuccess).to.be.true;",
											"});",
											"pm.test(\"Verify message is 'Success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Success\");",
											"});",
											"pm.test(\"Verify that 'errors' is null\", function () {",
											"    const responseData = pm.response.json();",
											"",
											"    pm.expect(responseData.errors).to.equal(null);",
											"});",
											"pm.test(\"Verify 'data' is an object\", function () {",
											"    pm.expect(jsonData.data).to.be.an('object');",
											"});",
											"pm.test(\"Verify 'records' array is present and not empty\", function () {",
											"    pm.expect(jsonData.data.records).to.be.an('array').that.is.not.empty;",
											"});",
											"pm.test(\"Verify properties of the first record\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"",
											"    pm.expect(firstRecord).to.have.property(\"organizationAccountDetailId\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerID\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"providerName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountNumber\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"accountName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"bankName\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"isDefault\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isApproved\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"isDisplayedOnInvoice\").that.is.a(\"boolean\");",
											"    pm.expect(firstRecord).to.have.property(\"approvalStatus\").that.is.a(\"string\");",
											"    pm.expect(firstRecord).to.have.property(\"dateCreated\").that.is.a(\"string\");",
											"});",
											"pm.test(\"Verify account name is Suretree Systems Limited\", function () {",
											"    var firstRecord = jsonData.data.records[0];",
											"    pm.expect(firstRecord.accountName).to.eql(\"Suretree Systems Limited\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ae6bf090-90a5-409a-a164-d574f1cde5d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryString\":\"Suretree Systems Limited\",\n    \"organizationAccountDetailId\":[],\n    \"providerID\":[],//nullable,\n    \"providerName\":[],//nullable,\n    \"accountName\":[],//nullable,\n    \"accountNumber\":[],//nullable,\n    \"approvalStatus\":[],//nullable,\n    \"bankName\":[],//nullable,\n    \"isDefault\":null, //true/false/nullable\n    \"isDisplayedOnInvoice\": null,//true/false/nullable\n    \"isApproved\": null,//true/false/nullable\n    \"dateCreated\":null,//nullable\"14db93e1-d7f2-460b-aa85-3ab8f5627111\"\n    \"rowsPerPage\":7,\n    \"pageNumber\":1,\n    \"sortType\":\"DESC\",//nullable\n    \"sortBy\":\"DateCreated\"//nullable\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/v2/AccountDetailsConfiguration/all-account-details-configuration-search-params"
							},
							"response": []
						}
					],
					"id": "9f78f8bf-301c-404b-8e4f-41a51b90494c"
				}
			],
			"id": "fbc223ad-861c-4b10-800d-a7ac621f0cb2"
		},
		{
			"name": "Sign up",
			"item": [
				{
					"name": "Add middle name field to the profile page endpoint on customer dashboard",
					"item": [
						{
							"name": "Add middle name field to the profile page endpoint on customer dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17023e23-b6e7-40de-8a75-35a5c4691562",
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test('Verify MiddleName is returned', function () {",
											"    pm.expect(pm.response.text()).to.include('MiddleName');",
											"})",
											"",
											"pm.test('Verify CustomerId is returned', function () {",
											"    const customerId = pm.response.json().Details.CustomerId;",
											"    pm.expect(customerId).to.not.be.null;",
											"    pm.expect(customerId).to.not.be.empty;",
											"})",
											"",
											"pm.test('FirstName should be returned', function () {",
											"    const firstName = pm.response.json().Details.FirstName;",
											"    pm.expect(firstName).to.not.be.null;",
											"    pm.expect(firstName).to.not.be.empty;",
											"})",
											"",
											"pm.test('LastName should be returned', function () {",
											"    const lastName = pm.response.json().Details.LastName;",
											"    pm.expect(lastName).to.not.be.null;",
											"    pm.expect(lastName).to.not.be.empty;",
											"})",
											"",
											"pm.test('PhoneNumber should be returned', function () {",
											"    const phoneNumber = pm.response.json().Details.PhoneNumber;",
											"    pm.expect(phoneNumber).to.not.be.null;",
											"    pm.expect(phoneNumber).to.not.be.empty;",
											"})",
											"",
											"pm.test('Gender should be returned', function () {",
											"    const gender = pm.response.json().Details.Gender;",
											"    pm.expect(gender).to.not.be.null;",
											"    pm.expect(gender).to.not.be.empty;",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4feb3444-22de-4860-aafa-7836fbdd64e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/Customers/get-customer-profile/88b6021d-f424-4eb4-8e18-bb4f52341233"
							},
							"response": []
						},
						{
							"name": "Invalid customer ID: Add middle name field to the profile page endpoint on customer dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17023e23-b6e7-40de-8a75-35a5c4691562",
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"pm.test(\"Error message is 'Invalid customer ID.'\", function () {",
											"    pm.expect(jsonData.errorMessage).to.eql(\"Invalid customer ID.\");",
											"});",
											"pm.test(\"Details is null\", function () {",
											"    pm.expect(jsonData.details).to.be.null;",
											"});",
											"",
											"pm.test(\"SuccessMessage is null\", function () {",
											"    pm.expect(jsonData.successMessage).to.be.null;",
											"});",
											"pm.test(\"Details is null\", function () {",
											"    pm.expect(jsonData.details).to.be.null;",
											"});",
											"pm.test(\"responseCode is 400\", function () {",
											"    pm.expect(jsonData.responseCode).to.eql(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "75b9bb8a-bee2-475b-a7eb-47e0ebc125e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{admin_Auth_token}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api/Customers/get-customer-profile/88b6021d-f424-4eb4-8e18-bb4f52341277"
							},
							"response": []
						}
					],
					"id": "aeda71ac-6fec-40b8-83e1-8ca580b524ea"
				}
			],
			"id": "593e0342-900f-445b-917f-f048659e055f"
		},
		{
			"name": "Invoice page",
			"item": [
				{
					"name": "Api for get list for create invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e067b041-46e2-42a6-97c3-ca4575c641d2",
								"exec": [
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Verify successMessage\", function () {\r",
									"    pm.response.to.have.jsonBody('successMessage', 'Data retrieve successfully.');\r",
									"});\r",
									"pm.test(\"Verify errorMessage is null\", function () {\r",
									"    pm.response.to.have.jsonBody('errorMessage', null);\r",
									"});\r",
									"pm.test(\"Check responseCode is 200\", function () {\r",
									"    pm.response.to.have.jsonBody('responseCode', 200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7f09c997-c0d3-4227-ab78-1ba74b059397",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"url": "{{baseUrl}}/api/Invoice/get-list-for-createinvoice"
					},
					"response": []
				},
				{
					"name": "without authorization: Api for get list for create invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e067b041-46e2-42a6-97c3-ca4575c641d2",
								"exec": [
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a08932f6-c048-434d-9603-b5879579691b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "POST",
						"header": [],
						"url": "{{baseUrl}}/api/Invoice/get-list-for-createinvoice"
					},
					"response": []
				}
			],
			"id": "b0f64b08-851c-4a65-8dd3-d925d197341b"
		},
		{
			"name": "Role and permission",
			"item": [
				{
					"name": "Return users by role/permissions-  invalid role ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b91ad81-6fa9-451b-81ba-40f542eed2c2",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Status code name has 'Not Found'\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									"var Response = pm.response.json()\r",
									"pm.test(\"isSuccess returns false\", function () {\r",
									"    pm.expect(Response.isSuccess).to.eql(false)\r",
									"});\r",
									"pm.test(\"Error Message is returned\", function () {\r",
									"    pm.expect(Response.errors[0]).to.include(\"No data was returned\")\r",
									"});\r",
									"pm.test(\"Data to exist\", function () {\r",
									"    pm.expect(Response.data).to.be.null\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ece7aac6-5902-4bee-8ce3-f0182bbd6e63",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4fad7ae0-ae42-4f46-9427-fd0b7f6dc5a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"09076789876\"\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/Users/get-users-by-roles"
					},
					"response": []
				},
				{
					"name": "Retruen users by role/permissions - invalid authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b91ad81-6fa9-451b-81ba-40f542eed2c2",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Status code name has Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ebbd81fd-b731-45e8-8e99-91ab4e74f166",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "2c5a55f5-3fc4-4fa7-a5dd-13b9fd78ab24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"1827153e-7064-4f16-b3f9-1003415e8502\"\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/Users/get-users-by-roles"
					},
					"response": []
				},
				{
					"name": "API to return users by role/permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0dc27f3-6a63-491d-8b11-20be7596bdc8",
								"exec": [
									"pm.test('Response Body Should Have userID', function () {\r",
									"    pm.expect(pm.response.text()).to.include('userID');\r",
									"})\r",
									"\r",
									"pm.test('Status code name Have 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have city', function () {\r",
									"    pm.expect(pm.response.text()).to.include('city');\r",
									"});\r",
									"\r",
									"pm.test('Response Body Should Have contactAddress1', function () {\r",
									"    pm.expect(pm.response.text()).to.include('contactAddress1');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have contactAddress2', function () {\r",
									"    pm.expect(pm.response.text()).to.include('contactAddress2');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have countryStateId', function () {\r",
									"    pm.expect(pm.response.text()).to.include('countryStateId');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have dob', function () {\r",
									"    pm.expect(pm.response.text()).to.include('dob');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have emailAddress', function () {\r",
									"    pm.expect(pm.response.text()).to.include('emailAddress');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have firstName', function () {\r",
									"    pm.expect(pm.response.text()).to.include('firstName');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have gender', function () {\r",
									"    pm.expect(pm.response.text()).to.include('gender');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have lastName', function () {\r",
									"    pm.expect(pm.response.text()).to.include('lastName');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have maritalStatusID', function () {\r",
									"    pm.expect(pm.response.text()).to.include('maritalStatusID');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have numberOfDependents', function () {\r",
									"    pm.expect(pm.response.text()).to.include('numberOfDependents');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have phoneNumber', function () {\r",
									"    pm.expect(pm.response.text()).to.include('phoneNumber');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have postalCode', function () {\r",
									"    pm.expect(pm.response.text()).to.include('postalCode');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have roleIds', function () {\r",
									"    pm.expect(pm.response.text()).to.include('roleIds');\r",
									"})\r",
									"\r",
									"pm.test('Response Body Should Have title', function () {\r",
									"    pm.expect(pm.response.text()).to.include('title');\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ff1398be-d9d0-4525-b93d-10e89d8b6040",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token_Live}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"82f50f0e-4a18-4862-9180-623b101a80a7\"\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/v2/Users/get-users-by-roles"
					},
					"response": []
				}
			],
			"id": "55cab817-6687-4e34-a6c4-b64cad1ffb93"
		},
		{
			"name": "Download loan application",
			"item": [
				{
					"name": "Download loan application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38436323-6ca7-4dc8-ae0c-ad7084c4991e",
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200, \"OK\");",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39a17787-5db5-44d7-8a73-017074ee5a29",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "f9f56589-b045-40bb-9172-48f239295c90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/loans/get-download-document-url-link?ApplicationId=927929ec-2efe-4110-9ce7-802368c77257",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"loans",
								"get-download-document-url-link"
							],
							"query": [
								{
									"key": "ApplicationId",
									"value": "927929ec-2efe-4110-9ce7-802368c77257"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download loan application - Invalid Application ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1245f92a-7ad0-49f8-9454-c826fa8e5727",
								"exec": [
									"var resp = JSON.parse(responseBody)",
									"",
									"pm.test(\"Verify that Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Verify that error message is 'The server was unable to process your request'\", function () {",
									"    pm.expect(resp.data).to.eql(\"The server was unable to process your request\");",
									"});",
									"pm.test(\"isSuccess returns false'\", function () {",
									"    pm.expect(resp.isSuccess).to.eql(false);",
									"});",
									"pm.test(\"message returns Failed'\", function () {",
									"    pm.expect(resp.message).to.eql(\"Failed\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fee786a3-db41-4633-bef8-a6ed3aabba79",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "72b79617-68d2-4fc9-bc02-196287bacd0d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/loans/get-download-document-url-link?ApplicationId=927929ec-2efe-4110-9ce7-802368c7725",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"loans",
								"get-download-document-url-link"
							],
							"query": [
								{
									"key": "ApplicationId",
									"value": "927929ec-2efe-4110-9ce7-802368c7725"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download loan application - Application ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e14c354a-1705-4f87-8e81-1f82d86f5c6f",
								"exec": [
									"var resp = JSON.parse(responseBody)",
									"",
									"pm.test(\"Verify that Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"",
									"pm.test(\"Verify that error message is 'The server was unable to process your request'\", function () {",
									"    pm.expect(resp.data).to.eql(\"The server was unable to process your request\");",
									"});",
									"pm.test(\"isSuccess returns false'\", function () {",
									"    pm.expect(resp.isSuccess).to.eql(false);",
									"});",
									"pm.test(\"message returns Failed'\", function () {",
									"    pm.expect(resp.message).to.eql(\"Failed\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "050909d4-30a4-484e-9ee5-b52f07768a0b",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "46fc69f4-f92a-4fbe-b24b-65827692ecb6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/loans/get-download-document-url-link?ApplicationId=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"loans",
								"get-download-document-url-link"
							],
							"query": [
								{
									"key": "ApplicationId",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download loan application - Invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e14c354a-1705-4f87-8e81-1f82d86f5c6f",
								"exec": [
									"var resp = JSON.parse(responseBody)",
									"",
									"pm.test(\"Verify that Status code is 401, Unauthorized\", function () {",
									"    pm.response.to.have.status(401, \"Unauthorized\");",
									"});",
									"pm.test(\"Verify that data returned Unauthorized\", function () {",
									"    pm.expect(resp.data).to.eql(\"Unauthorized\");",
									"});",
									"pm.test(\"Verify that StatusCode is 401\", function () {",
									"    pm.expect(resp.statusCode).to.eql(401);",
									"});",
									"pm.test(\"isSuccess returns false'\", function () {",
									"    pm.expect(resp.isSuccess).to.eql(false);",
									"});",
									"pm.test(\"message returns Unauthorized'\", function () {",
									"    pm.expect(resp.message).to.eql(\"Unauthorized\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "050909d4-30a4-484e-9ee5-b52f07768a0b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b60b29dc-8d98-4b89-8a9e-141f42af4c81",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjU4NzkZWI2LTM1MjUtNGZlOC1iNDc1LTUyMWI0OWIzODE0OCIsIkN1c3RvbWVySWQiOiI4OGI2MDIxZC1mNDI0LTRlYjQtOGUxOC1iYjRmNTIzNDEyMzMiLCJVc2VyRnVsbE5hbWUiOiJCb2x1d2F0aWZlIE9sYXR1bmRlIiwiRW1haWwiOiJ0ZXN0ZXIuYWNjb3VudEBzdXJldHJlZS5jb20iLCJqdGkiOiI3NGY2YzAyNC05MmIzLTQyMzctODQ3YS01MTkyNTlkYTMwMzIiLCJQaG9uZU51bWJlciI6IisyMzQ4MDU1NTE1NTQ1IiwibmJmIjoxNzA5NjYxMTA1LCJleHAiOjE3MDk2NjIzMDUsImlhdCI6MTcwOTY2MTEwNX0.l_NXuahL3TQDJCziiGqtkAzZ2B5Wqu3PHLmxoB_9hQ"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/loans/get-download-document-url-link?ApplicationId=927929ec-2efe-4110-9ce7-802368c77257",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"loans",
								"get-download-document-url-link"
							],
							"query": [
								{
									"key": "ApplicationId",
									"value": "927929ec-2efe-4110-9ce7-802368c77257"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download loan application - No Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e14c354a-1705-4f87-8e81-1f82d86f5c6f",
								"exec": [
									"var resp = JSON.parse(responseBody)",
									"",
									"pm.test(\"Verify that Status code is 401, Unauthorized\", function () {",
									"    pm.response.to.have.status(401, \"Unauthorized\");",
									"});",
									"pm.test(\"Verify that data returned Unauthorized\", function () {",
									"    pm.expect(resp.data).to.eql(\"Unauthorized\");",
									"});",
									"pm.test(\"Verify that StatusCode is 401\", function () {",
									"    pm.expect(resp.statusCode).to.eql(401);",
									"});",
									"pm.test(\"isSuccess returns false'\", function () {",
									"    pm.expect(resp.isSuccess).to.eql(false);",
									"});",
									"pm.test(\"message returns Unauthorized'\", function () {",
									"    pm.expect(resp.message).to.eql(\"Unauthorized\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "050909d4-30a4-484e-9ee5-b52f07768a0b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ca0cdc02-85f3-4338-bd06-1e0773e1d869",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IjU4NzkZWI2LTM1MjUtNGZlOC1iNDc1LTUyMWI0OWIzODE0OCIsIkN1c3RvbWVySWQiOiI4OGI2MDIxZC1mNDI0LTRlYjQtOGUxOC1iYjRmNTIzNDEyMzMiLCJVc2VyRnVsbE5hbWUiOiJCb2x1d2F0aWZlIE9sYXR1bmRlIiwiRW1haWwiOiJ0ZXN0ZXIuYWNjb3VudEBzdXJldHJlZS5jb20iLCJqdGkiOiI3NGY2YzAyNC05MmIzLTQyMzctODQ3YS01MTkyNTlkYTMwMzIiLCJQaG9uZU51bWJlciI6IisyMzQ4MDU1NTE1NTQ1IiwibmJmIjoxNzA5NjYxMTA1LCJleHAiOjE3MDk2NjIzMDUsImlhdCI6MTcwOTY2MTEwNX0.l_NXuahL3TQDJCziiGqtkAzZ2B5Wqu3PHLmxoB_9hQ"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v2/loans/get-download-document-url-link?ApplicationId=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v2",
								"loans",
								"get-download-document-url-link"
							],
							"query": [
								{
									"key": "ApplicationId",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "ba9d6184-ab0d-41c8-9383-55f1ef3f37a0"
		},
		{
			"name": "Update application status",
			"item": [
				{
					"name": "update application status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb99b1a8-82c7-4ea0-849a-b3406b9df77f",
								"exec": [
									"var resp = JSON.parse(responseBody)",
									"",
									"pm.test(\"Verify that Status code is 200, 'OK'\", function () {",
									"    pm.response.to.have.status(200, 'OK');",
									"});",
									"",
									"pm.test(\"Verify that successMessage returns 'Email notification send successful'\", function () {",
									"    pm.expect(resp.successMessage).to.eql('Email notification send successful');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "313abeee-68ea-4d46-af62-48a28ca61433",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "e2f9d783-6c07-451b-b6ab-4e05f451ff97",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"OTHERS\",\n  \"otherCancellationComment\": \"This is for test\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - Invalid Customer ID",
					"id": "b232918b-8ead-444c-bc72-4ae4f49a4179",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c147\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"OTHERS\",\n  \"otherCancellationComment\": \"This is for test\",\n  \"userId\": \"\",\n  \"customerId\": \"585ec1ac-376d-4283-9cb7-78965b5313ca\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - No Customer ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "076a7195-01dd-4fad-a59c-b26d82f19563",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ceaa451f-1ea2-4415-8e13-db95d4538ba3",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "278abfda-ceb9-460c-9e68-9a39c3813bf0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"OTHERS\",\n  \"otherCancellationComment\": \"This is for test\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - Invalid Loan Status ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33583524-9420-4feb-91e0-c35415001d9f",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e56725e1-0adb-419b-9973-684da371411c",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "fe6f28cb-b798-4b0b-ae38-0dbd9ac97ca9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E262\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"OTHERS\",\n  \"otherCancellationComment\": \"This is for test\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - No Loan Status ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec4bd862-0d99-4e80-94d5-196359addb2b",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "281f38da-fe57-4a45-9b6a-70632fd654a2",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "dff5c3e2-c426-4901-a380-4f7814b247cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"OTHERS\",\n  \"otherCancellationComment\": \"This is for test\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - No comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29cc270b-39b9-42f8-a1c3-bf64c3db7005",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "545a9337-eafb-4a74-ab5e-5c625b9f746e",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "abbc0f2d-4048-43bb-96bc-67e8dc147a17",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"\",\n  \"otherCancellationComment\": \"\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - Invalid user ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c333fa53-39ef-4f80-87e0-bd637612f3d3",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e8c856ab-db63-4133-ac58-f9617bedd7d5",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "3840b874-a114-4326-8e92-3e1d02d897e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"\",\n  \"otherCancellationComment\": \"\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - No user ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "830f5520-7dbf-4ee3-ab9d-903d279a0e7e",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4e544011-7dd7-4a65-8b67-15b5e807056f",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "86e72e55-35f4-4cda-9fc8-24efb9b6b869",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"\",\n  \"otherCancellationComment\": \"\",\n  \"userId\": \"\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848a1e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - Invalid Customer ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1060dcda-e06d-4567-9210-ef27ff275844",
								"exec": [
									" pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "755a6cd3-dee2-4107-a05a-98f6c773ab39",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "ea8c77fc-5e1a-438f-9f68-987d1d7f36ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"\",\n  \"otherCancellationComment\": \"\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"bdb90d8d-3fbc-4a27-950c-c6c0b5848e\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				},
				{
					"name": "update application status - No Customer ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbc1148c-a3bf-41a4-a8b4-a8cb9b66d8d1",
								"exec": [
									"pm.test(\"Verify that Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Verify that Status code name has Bad Request\", function () {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"var Response = pm.response.json()",
									"pm.test(\"Verify that successMessage is null\", function () {",
									"    pm.expect(Response.successMessage).to.eql(null)",
									"});",
									"pm.test(\"Verify that ErrorMessage is First name is required\", function () {",
									"    pm.expect(Response.errorMessage).to.eql(\"First name is required.\")",
									"});",
									"pm.test(\"Verify that ResponseCode is 400\", function () {",
									"    pm.expect(Response.responseCode).to.eql(400)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a46e57f7-36c5-4881-b90f-b4649d13fa1d",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "0511286c-4e01-4523-b42a-848bc651d6c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerApplicationId\": \"54dab224-59c9-42cd-84d1-c3d6149c1478\",\n  \"loanStatusID\": \"5637A92B-33C4-49B6-AA07-311015E26209\",\n  \"loanAmountDisbursed\": 0,\n  \"agreedLoanDuration\": 0,\n  \"agreedLoanInterestRate\": 0,\n  \"loanDisbursementDate\": \"2024-02-07T08:08:10.038Z\",\n  \"comment\": \"\",\n  \"otherCancellationComment\": \"\",\n  \"userId\": \"7126f73d-91e6-495a-b00f-d3c0d11c6c5b\",\n  \"customerId\": \"\",\n  \"providerLoanId\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/customers/UpdateLoanStatus"
					},
					"response": []
				}
			],
			"id": "1cf0ff9f-bf48-46d1-b382-2d6cbb50f774"
		},
		{
			"name": "Get Savings",
			"item": [
				{
					"name": "Get savings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d822b22e-a681-4762-a420-840ab7106a7b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Your test successMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.SuccessMessage).to.eql(\"Successful\");",
									"});",
									"",
									"pm.test(\"Your test errorMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ErrorMessage).to.eql(null);",
									"});",
									"",
									"pm.test(\"Your test responseCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.ResponseCode).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2614272d-cf2f-46d3-87a2-77cd113a0b9b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8ea587d5-9dfb-4af2-810d-c77fb3ae62ba",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/savings/getloans"
					},
					"response": []
				}
			],
			"id": "b93da73b-f76a-4be8-8eef-fa9610a9886d"
		},
		{
			"name": "Search Savings Products",
			"item": [
				{
					"name": "Search Savings Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d41004c6-828e-4ee0-91a2-6012600b22d2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Your test successMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.successMessage).to.eql(null);",
									"});",
									"",
									"pm.test(\"Your test errorMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorMessage).to.eql(null);",
									"});",
									"pm.test(\"Your test responseCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(200);",
									"});",
									"pm.test(\"details is not empty\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.details).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "344ac487-5bad-498d-bae9-ce18f559a597",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "cb30ac2a-f8fc-4f36-9ef1-6051d6b28ed9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"queryString\": \"Slack\",\n  \"rowsPerPage\": 20,\n  \"pageNumber\":1,\n  \"total\": 0,\n  \"totalPages\": 10,\n  \"searchText\": \"\",\n  \"sortBy\": \"DateCreate\",\n  \"orderIn\": \"DESC\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/products/SearchSavingsProductsForAdmin"
					},
					"response": []
				}
			],
			"id": "e65b6002-0a49-4829-aeeb-96d7f95d6faa"
		},
		{
			"name": "Get Saving Product Data via Product ID",
			"item": [
				{
					"name": "Get Saving Product Data via Product ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "575a7faa-dcc7-44b3-a9d9-6316f64e8494",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Your test successMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.successMessage).to.eql(\"Data retrive successfully\");",
									"});",
									"",
									"pm.test(\"Your test errorMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorMessage).to.eql(null);",
									"});",
									"",
									"pm.test(\"Your test responseCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(200);",
									"});",
									"pm.test(\"details is not empty\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.details).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8d5eb897-9cde-476f-a707-e0f71ae1ff14",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "7658cbda-abfb-4b14-a49b-478b84a25731",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/products/GetSavingProductData/d29c0b37-ceac-4839-8bd0-c73561297eac"
					},
					"response": []
				}
			],
			"id": "673a5209-d3f3-4513-9afd-2ffddadce8b7"
		},
		{
			"name": "Save Savings Product",
			"item": [
				{
					"name": "Save Savings Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2600bfd7-6c53-44a0-ae10-ea6f3e33580c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Your test successMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.successMessage).to.eql(\"Data saved successfully\");",
									"});",
									"",
									"pm.test(\"Your test errorMessage\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errorMessage).to.eql(null);",
									"});",
									"pm.test(\"Your test responseCode\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.responseCode).to.eql(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "878dfbb2-b042-4fc8-995c-54015d3fbdd4",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "2ad6f603-25b8-4b3a-aad7-3afe5cf1dd41",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{admin_Auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n    \"productName\": \"Slack System\",\n    \"productDescription\": \"Not Really Slack\",\n    \"providerId\": \"fef05476-4d39-4ed7-938c-97e0fa5eb5f1\",\n    \"providerProductPageUrl\": \"emmsdan.com\",\n    \"isPublished\": false,\n    \"classOfBusinessId\": \"00f80de2-6f97-4cdc-9a95-e3f6a79f6850\",\n    \"productSeoMetaTagTitle\": \"EmmsDan Testing - Slack System\",\n    \"productSeoMetaTagUrlSlug\": \"emmsdan-testing-slack-system\",\n    \"productSeoMetaTagDescription\": \"not really slack\",\n    \"productSeoMetaTagKeywords\":\"slack\",\n    \"canTakeApplications\": true,\n    \"applicationSignatureType\": \"Confirmation Checkbox\",\n    \"commissionValue\": 9.0,\n    \"isRate\": true,\n    \"interestType\": 235,\n    \"productImages\": [\n        {\n            \"fileSystemId\": \"b08a68cf-4fc7-4c8c-b7ab-28e50e358eaf\"\n        }\n    ],\n    \"productCategories\":  [\n            \"082d28f7-0f23-4336-9bf8-2508a2674d02\",\n            \"44981E1D-CF61-40D4-8FC4-DC55EC6BEF70\",\n            \"746cb516-69e8-4c30-9912-694674241d4f\",\n            \"701C71A6-FFED-49C2-9DE0-2FE125C14E45\",\n            \"2fde931f-bfcd-4427-9fed-ad843270f1d2\"\n        ],\n    \"productRequirements\": [\n            \"0BX19-278U0-BPU6M-K232L-I3WA1-0CP1Y\",\n            \"S414T-2F8SC-8U2W1-M8G5A-6XV10-1QTIT\"\n        ],\n    \"productAttributeDetails\": [\n        {\n            \"productAttributeName\": \"Rates\",\n            \"attributeValue\": \"3\"\n        },\n        {\n            \"productAttributeName\": \"Interest\",\n            \"attributeValue\": \"3\"\n        }\n    ],\n    \"productPanelChargeRateDetails\":[],\n    \"productInterestRateConfigurations\": [],\n    \"applicationType\": \"onsite\",\n    \"sponsoredProducts\": []\n}\n\n/**\n\n{\n        \"productId\": \"02a5bbcb-2f86-48d4-a267-386c631543bb\",\n        \"productName\": \"API Testing leverage244\",\n        \"productDescription\": \"\",\n        \"providerId\": \"a31e838c-888d-41c8-b1f9-279dd68c2db9\",\n        \"providerProductPageUrl\": \"https://google.com\",\n        \"isPublished\": false,\n        \"classOfBusinessId\": \"41753626-c37c-401e-a7d7-1b4e78437a1c\",\n        \"productSeoMetaTagTitle\": null,\n        \"productSeoMetaTagUrlSlug\": null,\n        \"productSeoMetaTagDescription\": null,\n        \"productSeoMetaTagKeywords\": null,\n        \"canTakeApplications\": null,\n        \"applicationSignatureType\": \"Upload Signature\",\n        \"commissionValue\": 0.0,\n        \"isRate\": false,\n        \"interestType\": 235,\n        \"productImages\": [],\n        \"productCategories\": [],\n        \"productRequirements\": [],\n        \"productAttributeDetails\": [\n            {\n                \"productAttributeName\": \"Rates\",\n                \"attributeValue\": \"3\"\n            },\n            {\n                \"productAttributeName\": \"Interest\",\n                \"attributeValue\": \"2\"\n            }\n        ],\n        \"productPanelChargeRateDetails\": [],\n        \"productInterestRateConfigurations\": [],\n        \"applicationType\": \"onsite\",\n        \"sponsoredProducts\": []\n    }\n    **/",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/products/SaveSavingsProduct"
					},
					"response": []
				}
			],
			"id": "64968875-538f-47ab-b853-846c01ded88e"
		},
		{
			"name": "Update loan",
			"id": "06a142c8-b89b-4d12-846a-aebd6f42c70d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{admin_Auth_token}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ProductImages\": [\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"ProductName\": \"Slack System\",\n            \"ProductDescription\": \"Not really slack\",\n            \"FileSystemId\": \"b08a68cf-4fc7-4c8c-b7ab-28e50e358eaf\",\n            \"FileSystemType\": null,\n            \"FileSystemExtension\": null,\n            \"FileSystemSize\": null,\n            \"FileSystemName\": null,\n            \"FileSystemOwnerId\": null,\n            \"FileSystemSlug\": null,\n            \"DateCreated\": null\n        }\n    ],\n    \"InterestType\": 236,\n    \"ProductTypeName\": null,\n    \"ProductRequirements\": [\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"RequirementId\": \"S414T-2F8SC-8U2W1-M8G5A-6XV10-1QTIT\",\n            \"RequirementTitle\": \"International Passport\",\n            \"RequirementDescription\": \"This is your valid international passport\",\n            \"ProductRequirementId\": \"5d961c1b-6210-430f-b314-bb98f2470741\",\n            \"ProductName\": \"Slack System\"\n        },\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"RequirementId\": \"0BX19-278U0-BPU6M-K232L-I3WA1-0CP1Y\",\n            \"RequirementTitle\": \"Bank Account\",\n            \"RequirementDescription\": null,\n            \"ProductRequirementId\": \"becc3613-977a-49ad-9e7e-8fafdeaef851\",\n            \"ProductName\": \"Slack System\"\n        }\n    ],\n    \"ProductCategories\": [\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"ProductName\": \"Slack System\",\n            \"ProductCategoryId\": \"6973f353-b065-4d28-b6b5-35f66d4711e9\",\n            \"CategoryId\": \"082d28f7-0f23-4336-9bf8-2508a2674d02\",\n            \"CategoryName\": \"Quick Loans\",\n            \"CategoryDescription\": \"Get same day payment when you apply for quick loans online from select providers in Nigeria.\",\n            \"CategoryUrlSlug\": \"quick-loans\",\n            \"ParentCategoryName\": \"Personal Loans\",\n            \"ParentCategoryUrlSlug\": \"loans\"\n        },\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"ProductName\": \"Slack System\",\n            \"ProductCategoryId\": \"eb904600-9caf-4290-a40b-cbdf9e4f562a\",\n            \"CategoryId\": \"2fde931f-bfcd-4427-9fed-ad843270f1d2\",\n            \"CategoryName\": \"Payday Loans\",\n            \"CategoryDescription\": \"Quick payday loans, no hidden fees or charges, 100% online. Apply quickly and get fast loan decision online\",\n            \"CategoryUrlSlug\": \"payday-loans\",\n            \"ParentCategoryName\": \"Personal Loans\",\n            \"ParentCategoryUrlSlug\": \"loans\"\n        },\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"ProductName\": \"Slack System\",\n            \"ProductCategoryId\": \"8a55e96d-d30a-44f0-bb6a-d5031ea8c588\",\n            \"CategoryId\": \"44981E1D-CF61-40D4-8FC4-DC55EC6BEF70\",\n            \"CategoryName\": \"SME Business Loans\",\n            \"CategoryDescription\": \"SME Business Loans description\",\n            \"CategoryUrlSlug\": \"sme-business-loans\",\n            \"ParentCategoryName\": \"Business Loans\",\n            \"ParentCategoryUrlSlug\": \"business-loans\"\n        },\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"ProductName\": \"Slack System\",\n            \"ProductCategoryId\": \"3b23661e-82a7-43f3-967c-29cceba3accf\",\n            \"CategoryId\": \"701C71A6-FFED-49C2-9DE0-2FE125C14E45\",\n            \"CategoryName\": \"Sole Trader Business Loans\",\n            \"CategoryDescription\": \"Sole Trader Business Loans description\",\n            \"CategoryUrlSlug\": \"sole-trader-business-loans\",\n            \"ParentCategoryName\": \"Business Loans\",\n            \"ParentCategoryUrlSlug\": \"business-loans\"\n        },\n        {\n            \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n            \"ProductName\": \"Slack System\",\n            \"ProductCategoryId\": \"7d1f3613-09e6-4bff-9c6b-e8e4906b59c4\",\n            \"CategoryId\": \"746cb516-69e8-4c30-9912-694674241d4f\",\n            \"CategoryName\": \"Consumer Loans\",\n            \"CategoryDescription\": \"Find low-interest personal loans without collateral\",\n            \"CategoryUrlSlug\": \"consumer-loans\",\n            \"ParentCategoryName\": \"Personal Loans\",\n            \"ParentCategoryUrlSlug\": \"loans\"\n        }\n    ],\n    \"ProductId\": \"d29c0b37-ceac-4839-8bd0-c73561297eac\",\n    \"ProductDescription\": \"Not really slack\",\n    \"DateCreated\": \"2024-02-06T10:21:33.637\",\n    \"DateLastModified\": \"AAAAAAABj4I=\",\n    \"ProviderId\": \"fef05476-4d39-4ed7-938c-97e0fa5eb5f1\",\n    \"ProviderName\": \"EmmsDan Testing\",\n    \"ProviderDescription\": \"<p><br></p><p><br></p><h4>Console</h4><p>Getting Started</p><p>Dashboard</p><p>nairaCompare.ng</p><h5>PRODUCT</h5><p>Products</p><p>Providers</p><h5>CUSTOMER MANAGEMENT</h5><p>Cust. Relationship Mgr</p><p>Applications</p><p>Campaigns</p><p>Newsletter Subscriptions</p><h5>FINANCE</h5><p>Invoice</p><p>Archived Invoice</p><p>Receipt</p><p>Archived Receipt</p><p>Account Details Configuration</p><h5>CONTENT STUDIO</h5><p>Content Manager</p><p>Media Gallery</p><h5>SETTINGS &amp; MORE</h5><p>User Management</p><p>Settings</p><h5>REPORTS</h5><p>Transactions</p><p>Site Traffic &amp; Analysis</p><p>Appraisal Report</p><p>Credit History Report</p><p>Search History</p><h4>Providers</h4><p><br></p><p><br></p><p>Boluwatife Olatunde</p><ul><li><a href=\\\"https://nc-admin-staging.suretree.com/#loans-product\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">Providers</a></li></ul><p><br></p><p><br></p><p>PROVIDER NAME - EMAILPROVIDER IDDATENUMBER OF PRODUCT</p><p>L</p><p>Letshego Microfinance Bank Nigeria Ltd</p><p>nnamdi.nwangbo@suretree.com</p><p><br></p><p>FP-0086</p><p>Jan 12, 2023</p><p><br></p><p>8 products</p><p>Page 1 of 1 from 1 records</p><p>1</p><h5>×</h5><ul><li><a href=\\\"https://nc-admin-staging.suretree.com/#about-loan-provider\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">Details</a></li><li><a href=\\\"https://nc-admin-staging.suretree.com/#loan-Provider-seo\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">SEO Settings</a></li><li><a href=\\\"https://nc-admin-staging.suretree.com/#loan-Provider-invoice-contact\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">Billing Contact Details</a></li><li><a href=\\\"https://nc-admin-staging.suretree.com/#loan-Provider-account-officer\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">Internal Account Officer</a></li></ul><h5><br></h5><h5>Provider Name:*</h5><h5><br></h5><h5>The provider name is the official name of the company. It should be the same as the name on the company's registration documents.</h5><h5>Description:*</h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5><br></h5><h5>Contact Address:*</h5><h5><br></h5><h5>Google Map:</h5><h5><br></h5><h5>Phone Number:*</h5><h5>&nbsp;+234</h5><h5>Website:*</h5><h5><br></h5><h5>Email Address:*</h5><h5><br></h5><h5>Invoice Frequency:</h5><h5>&nbsp;Daily&nbsp;</h5><h5>&nbsp;Weekly&nbsp;</h5><h5>&nbsp;Monthly&nbsp;</h5><h5>&nbsp;Quarterly&nbsp;</h5><h5>Is receive invoice email notification</h5><h5>Can take application</h5><h5>Can share loan applicant's contact details</h5><h5>Provider receives application notification?</h5><h5>Cancel</h5><h5>Save changes</h5><h5><br></h5><h5><br></h5>\",\n    \"ProviderEmail\": \"emmsdan12@yopmail.com\",\n    \"ProviderAddress\": \"here\",\n    \"ProviderPhone\": \"0987654321\",\n    \"ProviderWebsite\": \"yopmail.com\",\n    \"ProductName\": \"Slack System\",\n    \"ProductLoanId\": \"df340c51-1667-46ce-a333-acd9a5d22b90\",\n    \"MaxDuration\": 12,\n    \"MinDuration\": 1,\n    \"Rate\": 1,\n    \"MaxAmount\": 2000000000,\n    \"MinAmount\": 2000,\n    \"MaxAge\": 222,\n    \"MinAge\": 1,\n    \"IsAnnualRateType\": true,\n    \"IsFixedRepayment\": true,\n    \"IsPublished\": true,\n    \"ProviderProductPageUrl\": \"emmsdan.com\",\n    \"ClassOfBusinessId\": \"00f80de2-6f97-4cdc-9a95-e3f6a79f6850\",\n    \"ClassOfBusinessTitle\": null,\n    \"ClassOfBusinessDescription\": null,\n    \"FileSystemId\": \"b08a68cf-4fc7-4c8c-b7ab-28e50e358eaf\",\n    \"ProductSeoMetaTagTitle\": \"EmmsDan Testing - Slack System\",\n    \"ProductSeoMetaTagUrlSlug\": \"emmsdan-testing-slack-system\",\n    \"ProductSeoMetaTagDescription\": \"not really slack\",\n    \"ProductSeoMetaTagKeywords\": null,\n    \"ProviderSeoMetaTagTitle\": \"EmmsDan Testing\",\n    \"ProviderSeoMetaTagUrlSlug\": \"emmsdan-testing\",\n    \"ProviderSeoMetaTagDescription\": \"<p><br></p><p><br></p><h4>console</h4><p>getting started</p><p>dashboard</p><p>nairacompare.ng</p><h5>product</h5><p>products</p><p>providers</p><h5>customer management</h5><p>cust. relationship mgr</p><p>applications</p><p>campaigns</p><p>newsletter subscriptions</p><h5>finance</h5><p>invoice</p><p>archived invoice</p><p>receipt</p><p>archived receipt</p><p>account details configuration</p><h5>content studio</h5><p>content manager</p><p>media gallery</p><h5>settings & more</h5><p>user management</p><p>settings</p><h5>reports</h5><p>transactions</p><p>site traffic & analysis</p><p>appraisal report</p><p>credit history report</p><p>search history</p><h4>providers</h4><p><br></p><p><br></p><p>boluwatife olatunde</p><ul><li><a href=\\\"https://nc-admin-staging.suretree.com/#loans-product\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">providers</a></li></ul><p><br></p><p><br></p><p>provider name - emailprovider iddatenumber of product</p><p>l</p><p>letshego microfinance bank nigeria ltd</p><p>nnamdi.nwangbo@suretree.com</p><p><br></p><p>fp-0086</p><p>jan 12, 2023</p><p><br></p><p>8 products</p><p>page 1 of 1 from 1 records</p><p>1</p><h5><new provider</h5><p>×</p><ul><li><a href=\\\"https://nc-admin-staging.suretree.com/#about-loan-provider\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">details</a></li><li><a href=\\\"https://nc-admin-staging.suretree.com/#loan-provider-seo\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">seo settings</a></li><li><a href=\\\"https://nc-admin-staging.suretree.com/#loan-provider-invoice-contact\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">billing contact details</a></li><li><a href=\\\"https://nc-admin-staging.suretree.com/#loan-provider-account-officer\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">internal account officer</a></li></ul><p><br></p><p>provider name:*</p><p><br></p><p>the provider name is the official name of the company. it should be the same as the name on the company's registration documents.</p><p>description:*</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p>contact address:*</p><p><br></p><p>google map:</p><p><br></p><p>phone number:*</p><p> +234</p><p>website:*</p><p><br></p><p>email address:*</p><p><br></p><p>invoice frequency:</p><p> daily </p><p> weekly </p><p> monthly </p><p> quarterly </p><p>is receive invoice email notification</p><p>can take application</p><p>can share loan applicant's contact details</p><p>provider receives application notification?</p><p>cancel</p><p>save changes</p><p><br></p><p><br></p>\",\n    \"ProviderSeoMetaTagKeywords\": \"\",\n    \"ProviderFileSystemId\": null,\n    \"IsProviderPublished\": true,\n    \"IsProviderBlacklisted\": false,\n    \"AverageCustomerRating\": null,\n    \"ProcessingTime\": 1,\n    \"ProviderAddressMap\": null,\n    \"NumberOfIncomeEarned\": 100000,\n    \"NumberOfExpenditureIncurred\": 30000,\n    \"ContentId\": null,\n    \"ContentTitle\": null,\n    \"ContentDescription\": null,\n    \"ContentBody\": null,\n    \"CommissionValue\": 9,\n    \"IsRate\": true,\n    \"CanTakeApplications\": true,\n    \"ProviderCanTakeApplications\": true,\n    \"ApplicationSignatureType\": \"Confirmation Checkbox\",\n    \"ApplicationType\": \"onsite\",\n    \"ManagementFee\": null,\n    \"sponsoredProducts\": []\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://nc-console-staging.suretree.com/api/products/update-loan-product"
			},
			"response": []
		},
		{
			"name": "clear cache",
			"id": "b0ebd0bd-68b4-4359-9e32-c293d6396bec",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseUrl}}/api/v2/cache/refresh"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "LoanSponsoredProductId",
			"value": ""
		},
		{
			"key": "LoanCategoryId",
			"value": ""
		},
		{
			"key": "LoanProductId",
			"value": ""
		},
		{
			"key": "SavingsSponsoredProductId",
			"value": ""
		},
		{
			"key": "SavingsCategoryId",
			"value": ""
		},
		{
			"key": "SavingsProductId",
			"value": ""
		}
	]
}