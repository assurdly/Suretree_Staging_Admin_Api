{"uid":"5326759df41db3e4","name":"Refresh successful","fullName":"AUTH#Refresh successful","historyId":"e792a60a-60d1-4002-b0e4-4e266487dd44","time":{"start":1706808852706,"stop":1706808852931,"duration":225},"status":"failed","statusMessage":"Verify that Status code is 200, Verify that SuccessMessage returns 'new token has been generated successfully, Verify that error message returns null","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Verify that Status code is 200, Verify that SuccessMessage returns 'new token has been generated successfully, Verify that error message returns null","steps":[{"name":"Verify that Status code is 200","time":{"start":1706808852922,"stop":1706808852922,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 400","statusTrace":"Error: expected response to have status code 200 but got 400\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that SuccessMessage returns 'new token has been generated successfully","time":{"start":1706808852924,"stop":1706808852924,"duration":0},"status":"failed","statusMessage":"expected null to deeply equal 'New token has been generated successf…'","statusTrace":"Error: expected null to deeply equal 'New token has been generated successf…'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:43)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify that error message returns null","time":{"start":1706808852926,"stop":1706808852926,"duration":0},"status":"failed","statusMessage":"expected 'Email is required.' to deeply equal null","statusTrace":"Error: expected 'Email is required.' to deeply equal null\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:13:41)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:11:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"88190344fde335ec","name":"TestScript","source":"88190344fde335ec.txt","type":"text/plain","size":505},{"uid":"341ba6a584d51fde","name":"Request Headers","source":"341ba6a584d51fde.json","type":"application/json","size":875},{"uid":"f2bd905e58d312e7","name":"Request Body","source":"f2bd905e58d312e7.txt","type":"text/plain","size":86},{"uid":"113907016d0c894e","name":"Response Headers","source":"113907016d0c894e.json","type":"application/json","size":780},{"uid":"9dcedf46504b00f1","name":"Response Body","source":"9dcedf46504b00f1.txt","type":"text/plain","size":197}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"AUTH"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://nc-console-staging.suretree.com/api/Auth"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5326759df41db3e4.json","parameterValues":["POST - https://nc-console-staging.suretree.com/api/Auth","400"]}